[{"filePath":"/builds/erp/finance-fe/setupProxy.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/accountingModal/accountingModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/accountingModal/types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/budgetLimitModal/budgetLimitModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/budgetLimitModal/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/externalReallocationModal/externalReallocationModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/fileList/fileList.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/fileList/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/fileModalView/fileModalView.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/fileModalView/types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/fundReleaseModal/fundReleaseModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/goalsModal/goalsModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/goalsModal/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/goalsModal/types.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":3,"column":23,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":3,"endColumn":26,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[74,77],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[74,77],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":3,"column":38,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":3,"endColumn":41,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[89,92],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[89,92],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export interface GoalsModalProps {\n  open: boolean;\n  onClose: (refetch?: any, message?: any) => void;\n  budgetProgramId: number;\n}\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/indicatorModal/indicatorModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/indicatorModal/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/indicatorModal/types.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":3,"column":23,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":3,"endColumn":26,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[78,81],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[78,81],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":3,"column":38,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":3,"endColumn":41,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[93,96],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[93,96],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export interface IndicatorModalProps {\n  open: boolean;\n  onClose: (refetch?: any, message?: any) => void;\n}\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/invoicesTabs/invoicesTabs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/landingPageContentBox/landingPageContentBox.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/landingPageContentBox/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/landingPageContentBox/types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/nonFinanceAccordion/activitySection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/nonFinanceAccordion/nonFinanceAccordion.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/nonFinanceAccordion/programSection/programSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/nonFinanceAccordion/programSection/programSectionPreview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/nonFinanceAccordion/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/nonFinanceAccordion/subprogramSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/nonFinanceAccordion/types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/constants.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/context/appContext.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/context/useAppContext.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/index.tsx","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/ban-ts-comment","severity":2,"message":"Do not use \"@ts-ignore\" because it alters compilation errors.","line":12,"column":3,"nodeType":"Line","messageId":"tsDirectiveComment","endLine":12,"endColumn":16,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/ban-ts-comment","severity":2,"message":"Do not use \"@ts-ignore\" because it alters compilation errors.","line":18,"column":5,"nodeType":"Line","messageId":"tsDirectiveComment","endLine":18,"endColumn":18,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/ban-ts-comment","severity":2,"message":"Do not use \"@ts-ignore\" because it alters compilation errors.","line":22,"column":3,"nodeType":"Line","messageId":"tsDirectiveComment","endLine":22,"endColumn":16,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/ban-ts-comment","severity":2,"message":"Do not use \"@ts-ignore\" because it alters compilation errors.","line":25,"column":5,"nodeType":"Line","messageId":"tsDirectiveComment","endLine":25,"endColumn":18,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/router.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/404.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/accounting/accounting.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/accounting/accountingOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/accounting/constants.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/accounting/currentAccountingTabs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/accounting/styles.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetDetails/budgetDetails.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetFO/budgetFO.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetFO/budgetOverviewFO/budgetOverviewFO.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetFO/budgetRequestsFO/budgetRequestsFO.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetFO/budgetRequestsFO/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetFO/constants.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetNonFinancialOverview/budgetNonFinancialOverview.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":12,"column":25,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":12,"endColumn":28,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[441,444],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[441,444],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {Button, Input} from 'client-library';\nimport {Controller, useForm} from 'react-hook-form';\nimport {NonFinanceAccordion} from '../../../components/nonFinanceAccordion/nonFinanceAccordion.tsx';\nimport {budgetStatusModal} from '../planning/budgetList/constants.tsx';\nimport {ButtonsContainer, StatusUpdateContainer, StyledDropdown} from './styles.ts';\n\nconst initialValues = {\n  status: null,\n  comment: '',\n};\n\nconst onSubmit = (data: any) => {\n  // TODO add sumbit api call\n  console.log(data);\n};\n\nconst BudgetNonFinancialOverview = () => {\n  const {control, register, handleSubmit} = useForm({defaultValues: initialValues});\n  return (\n    <div>\n      <NonFinanceAccordion programNo={1} key={`acc-${1}`} isPreview />\n      <StatusUpdateContainer>\n        {/*TODO check if options should be budgetStatusModal or something else*/}\n        <Controller\n          name=\"status\"\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <StyledDropdown value={value} name={name} options={budgetStatusModal} onChange={onChange} />\n          )}\n        />\n        <Input {...register('comment')} textarea placeholder={'Dodaj komentar'} />\n      </StatusUpdateContainer>\n      <ButtonsContainer>\n        <Button content=\"Nazad\" variant=\"secondary\" />\n        <Button content=\"Izmijeni status\" variant=\"primary\" type={'submit'} onClick={handleSubmit(onSubmit)} />\n      </ButtonsContainer>\n    </div>\n  );\n};\n\nexport default BudgetNonFinancialOverview;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetNonFinancialOverview/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetSendDetails/budgetSendPreview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetSendDetails/budgetSendTabs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetSendDetails/constants.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetSendDetails/requests.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":11,"column":48,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":11,"endColumn":51,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[555,558],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[555,558],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {Datepicker, Dropdown, Table} from 'client-library';\nimport {useState} from 'react';\nimport useGetOrganizationUnits from '../../../services/graphQL/organizationUnits/useGetOrganizationUnits';\nimport {tableHeadsRequests} from './constants';\nimport {Column, DropdownWrapperRequests, Price, SubTitle, Totals} from './styles';\n\nexport const RequestsPage = () => {\n  const [organizationUnit, setOrganizationUnit] = useState({id: 0, title: 'Sve'});\n  const {organizationUnits} = useGetOrganizationUnits();\n\n  const handleOrganizationUnitChange = (value: any) => {\n    setOrganizationUnit(value);\n  };\n\n  return (\n    <div>\n      <DropdownWrapperRequests>\n        <Dropdown\n          name=\"organization_unit\"\n          options={organizationUnits}\n          value={organizationUnit}\n          onChange={handleOrganizationUnitChange}\n          label=\"ORGANIZACIONA JEDINICA:\"\n        />\n      </DropdownWrapperRequests>\n      <Table data={[]} tableHeads={tableHeadsRequests} />\n      <Totals>\n        <Column>\n          <SubTitle variant=\"bodySmall\" content=\"UKUPNA NETO VRIJEDNOST:\" />\n          <Price variant=\"bodySmall\" content={'€ '} />\n        </Column>\n        <Column>\n          <SubTitle variant=\"bodySmall\" content=\"UKUPNA BRUTO VRIJEDNOST:\" />\n          <Price variant=\"bodySmall\" content={'€ '} />\n        </Column>\n      </Totals>\n      <Column>\n        <Datepicker\n          name=\"date_of_closing\"\n          onChange={() => {\n            console.log('');\n          }}\n          disabled\n        />\n      </Column>\n    </div>\n  );\n};\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetSendDetails/styles.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetTemplate/budgetTemplate.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetTemplate/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/currentBudget/constants.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/currentBudget/currentBudgetPreview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/currentBudget/currentBudgetTabs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/currentBudget/requests.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":11,"column":48,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":11,"endColumn":51,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[555,558],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[555,558],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {Datepicker, Dropdown, Table} from 'client-library';\nimport {useState} from 'react';\nimport useGetOrganizationUnits from '../../../services/graphQL/organizationUnits/useGetOrganizationUnits';\nimport {tableHeadsRequests} from './constants';\nimport {Column, DropdownWrapperRequests, Price, SubTitle, Totals} from './styles';\n\nexport const RequestsPage = () => {\n  const [organizationUnit, setOrganizationUnit] = useState({id: 0, title: 'Sve'});\n  const {organizationUnits} = useGetOrganizationUnits();\n\n  const handleOrganizationUnitChange = (value: any) => {\n    setOrganizationUnit(value);\n  };\n\n  return (\n    <div>\n      <DropdownWrapperRequests>\n        <Dropdown\n          name=\"organization_unit\"\n          options={organizationUnits}\n          value={organizationUnit}\n          onChange={handleOrganizationUnitChange}\n          label=\"ORGANIZACIONA JEDINICA:\"\n        />\n      </DropdownWrapperRequests>\n      <Table data={[]} tableHeads={tableHeadsRequests} />\n      <Totals>\n        <Column>\n          <SubTitle variant=\"bodySmall\" content=\"UKUPNA NETO VRIJEDNOST:\" />\n          <Price variant=\"bodySmall\" content={'€ '} />\n        </Column>\n        <Column>\n          <SubTitle variant=\"bodySmall\" content=\"UKUPNA BRUTO VRIJEDNOST:\" />\n          <Price variant=\"bodySmall\" content={'€ '} />\n        </Column>\n      </Totals>\n      <Column>\n        <Datepicker\n          name=\"date_of_closing\"\n          onChange={() => {\n            console.log('');\n          }}\n          disabled\n        />\n      </Column>\n    </div>\n  );\n};\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/currentBudget/styles.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/externalReallocation/externalReallocationOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/externalReallocation/styles.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/fundRelease/fundReleaseOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/fundRelease/fundReleaseRequest.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/fundRelease/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/internalReallocation/internalReallocationBudgetTemplate.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/internalReallocation/internalReallocationOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/internalReallocation/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/landingPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/nonFinance/nonFinance.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/nonFinance/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/nonFinancePreview/nonFinancePreview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/nonFinancePreview/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/nonFinancialOverview/nonFinancialOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/nonFinancialOverview/styles.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/planning/OUBudgetSubmission/OUBudgetSubmission.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/planning/OUBudgetSubmission/budgetFinancial/budgetFinancial.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/planning/OUBudgetSubmission/budgetNonFinancial/budgetNonFinancial.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/planning/OUBudgetSubmission/budgetSubmissionTabs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/planning/OUBudgetSubmission/budgetSummary.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":8,"column":18,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":8,"endColumn":21,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[285,288],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[285,288],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'_' is defined but never used.","line":11,"column":24,"nodeType":"Identifier","messageId":"unusedVar","endLine":11,"endColumn":45}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {Button, Table} from 'client-library';\nimport useAppContext from '../../../../context/useAppContext';\nimport {FooterWrapper} from '../budgetList/styles';\nimport {budgetSummaryTableHeads} from './constants';\n\nexport interface BudgetSummaryProps {\n  id?: number;\n  budgetDetails: any;\n}\n\nconst BudgetSummary = (_: BudgetSummaryProps) => {\n  const {navigation, breadcrumbs} = useAppContext();\n\n  return (\n    <>\n      <Table tableHeads={budgetSummaryTableHeads} data={[]} style={{marginBottom: 22}} />\n      <FooterWrapper>\n        <Button\n          content=\"Nazad\"\n          variant=\"secondary\"\n          onClick={() => {\n            navigation.navigate('/finance/budget/planning');\n            breadcrumbs.remove();\n          }}\n        />\n        <Button content=\"Pošalji\" variant=\"primary\" disabled onClick={() => console.log('send')} />\n      </FooterWrapper>\n    </>\n  );\n};\n\nexport default BudgetSummary;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/planning/OUBudgetSubmission/constants.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/planning/OUBudgetSubmission/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/planning/SSSBudgetDetails/SSSBudgetDetails.styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/planning/SSSBudgetDetails/SSSBudgetDetails.tsx","messages":[{"ruleId":"@typescript-eslint/no-non-null-assertion","severity":1,"message":"Forbidden non-null assertion.","line":108,"column":31,"nodeType":"TSNonNullExpression","messageId":"noNonNull","endLine":108,"endColumn":118}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {yupResolver} from '@hookform/resolvers/yup';\nimport {Button, Dropdown, Typography} from 'client-library';\nimport {useEffect, useMemo, useState} from 'react';\nimport {Controller, useForm} from 'react-hook-form';\nimport * as yup from 'yup';\nimport BudgetLimitModal from '../../../../components/budgetLimitModal/budgetLimitModal.tsx';\nimport {UserRole} from '../../../../constants.ts';\nimport useAppContext from '../../../../context/useAppContext.ts';\nimport useGetBudgets from '../../../../services/graphQL/getBudgets/useGetBudgets.ts';\nimport useInsertBudget from '../../../../services/graphQL/insertBudget/useInsertBudget.ts';\nimport BudgetTable from '../../../../shared/budgetTable/budgetTable.tsx';\nimport {BudgetTableStep} from '../../../../shared/budgetTable/types.ts';\nimport {FlexRow} from '../../../../shared/flex.ts';\nimport Footer from '../../../../shared/footer.ts';\nimport {optionsNumberSchema, optionsStringSchema} from '../../../../utils/formSchemas.ts';\nimport {getYearOptions} from '../../../../utils/getYearOptions.ts';\nimport {budgetTypeOptions} from '../budgetList/constants.tsx';\nimport {MainTitle, OverviewBox, ScreenWrapper} from '../budgetList/styles.ts';\nimport {BoldText, Box, Controls, TableGrid} from './SSSBudgetDetails.styles.ts';\n\nexport type LimitObject = {\n  organization_unit_id: number;\n  limit: number;\n};\n\nconst addBudgetSchema = yup.object().shape({\n  year: optionsStringSchema.required('Ovo polje je obavezno').default(null),\n  budget_type: optionsNumberSchema.required('Ovo polje je obavezno').default(null),\n  limits: yup\n    .array()\n    .of(\n      yup.object().shape({\n        limit: yup.number().required(),\n        organization_unit_id: yup.number().required(),\n      }),\n    )\n    .required()\n    .default(null),\n});\n\nexport type AddBudgetFormType = yup.InferType<typeof addBudgetSchema>;\n\nconst SSSBudgetDetails = () => {\n  const [limitModal, setLimitModal] = useState(false);\n\n  const {\n    navigation: {\n      location: {pathname},\n      navigate,\n    },\n    contextMain,\n    alert,\n  } = useAppContext();\n\n  const {\n    control,\n    formState: {errors, isValid},\n    handleSubmit,\n    watch,\n    setValue,\n  } = useForm<AddBudgetFormType>({resolver: yupResolver(addBudgetSchema), mode: 'onBlur'});\n\n  const budgetID = pathname.split('/').at(-1);\n  const isNew = budgetID === 'add-new';\n\n  const {insertBudget, loading: isSaving} = useInsertBudget();\n  const {budgets} = useGetBudgets({id: isNew ? null : parseInt(budgetID)});\n\n  //todo check if the same api endpoint is used when the OJ manager is filling the budget\n  const onSubmit = async (data: AddBudgetFormType) => {\n    if (isSaving) return;\n\n    const payload = {\n      id: isNew ? null : parseInt(budgetID),\n      year: data.year.id.toString(),\n      budget_type: data.budget_type.id,\n      limits: data.limits,\n    };\n\n    await insertBudget(\n      payload,\n      () => {\n        alert.success('Uspješno sačuvano.');\n        navigate('/finance/budget/planning');\n      },\n      () => alert?.error('Greška. Promjene nisu sačuvane.'),\n    );\n  };\n\n  const onLimitModalSubmit = (data: LimitObject[]) => {\n    setValue('limits', data, {shouldValidate: true});\n  };\n\n  const availableYearsForBudget = useMemo(() => {\n    if (!budgets) return [];\n\n    const years = getYearOptions(6, false, 5);\n\n    const existingBudgetYears = budgets.items?.map(budget => budget.year) || [];\n    const filteredYears = years.filter(year => !existingBudgetYears.includes(Number(year.id)));\n\n    return filteredYears;\n  }, [budgets]);\n\n  useEffect(() => {\n    if (budgets && budgets.items && budgets.items.length > 0) {\n      setValue('year', {id: budgets.items[0].year.toString(), title: budgets.items[0].year.toString()});\n      setValue('budget_type', budgetTypeOptions.find(option => option.id === parseInt(budgets.items[0].budget_type))!);\n      setValue('limits', budgets.items[0].limits);\n    }\n  }, [budgets]);\n\n  const year = watch('year')?.id;\n\n  return (\n    <ScreenWrapper>\n      <OverviewBox>\n        <MainTitle variant=\"bodyMedium\" content={isNew ? 'NOVI BUDŽET' : `BUDŽET ZA ${year} GODINU`} />\n        <hr />\n        <Box>\n          <Controls>\n            <TableGrid>\n              <BoldText variant=\"bodySmall\" content=\"NAZIV PREDLAGAČA:\" />\n              <Typography variant=\"bodySmall\" content={contextMain.organization_unit.title} />\n            </TableGrid>\n            <Button content=\"Limiti\" variant=\"secondary\" style={{width: 130}} onClick={() => setLimitModal(true)} />\n          </Controls>\n\n          <FlexRow gap=\"1rem\" style={{marginTop: '1rem'}}>\n            <Controller\n              control={control}\n              name=\"year\"\n              render={({field: {name, onChange, value}}) => (\n                <Dropdown\n                  name={name}\n                  value={value}\n                  onChange={onChange}\n                  options={availableYearsForBudget}\n                  error={errors.year?.message}\n                  placeholder=\"Odaberite godinu\"\n                  isDisabled={!isNew}\n                />\n              )}\n            />\n            <Controller\n              control={control}\n              name=\"budget_type\"\n              render={({field: {name, onChange, value}}) => (\n                <Dropdown\n                  name={name}\n                  value={value}\n                  onChange={onChange}\n                  options={budgetTypeOptions}\n                  error={errors.year?.message}\n                  placeholder=\"Odaberite tip\"\n                  isDisabled={!isNew}\n                />\n              )}\n            />\n          </FlexRow>\n        </Box>\n\n        {contextMain.role_id === UserRole.MANAGER_OJ && (\n          <Box>\n            <TableGrid>\n              <BoldText variant=\"bodySmall\" content=\"PROGRAM:\" />\n              <Typography variant=\"bodySmall\" content=\"SUDSKI SAVJET\" />\n              <BoldText variant=\"bodySmall\" content=\"POTPROGRAM:\" />\n              <Typography variant=\"bodySmall\" content=\"SUDSKI SAVJET\" />\n              <BoldText variant=\"bodySmall\" content=\"AKTIVNOSTI:\" />\n              <Typography variant=\"bodySmall\" content=\"SUDSKI SAVJET\" />\n              <BoldText variant=\"bodySmall\" content=\"IZVOR:\" />\n              <Typography variant=\"bodySmall\" content=\"SUDSKI SAVJET\" />\n            </TableGrid>\n          </Box>\n        )}\n\n        {year && <BudgetTable step={BudgetTableStep.CREATING} year={parseInt(year)} organizationUnitId={1} />}\n\n        <Footer>\n          <Button\n            content=\"Otkaži\"\n            variant=\"secondary\"\n            style={{width: 130}}\n            onClick={() => navigate('/finance/budget/planning')}\n          />\n          <Button\n            content=\"Sačuvaj\"\n            variant=\"primary\"\n            style={{width: 130}}\n            onClick={handleSubmit(onSubmit)}\n            disabled={!isValid && isNew}\n          />\n        </Footer>\n      </OverviewBox>\n\n      <BudgetLimitModal open={limitModal} onClose={() => setLimitModal(false)} onSubmit={onLimitModalSubmit} />\n    </ScreenWrapper>\n  );\n};\n\nexport default SSSBudgetDetails;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/planning/budgetList/budgetList.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/planning/budgetList/constants.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/planning/budgetList/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/spendingDynamics/constants.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/spendingDynamics/requestDynamics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/spendingDynamics/spendingDynamicsOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/spendingDynamics/spendingDynamicsRequests.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/spendingDynamics/spendingDynamicsTabs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/spendingDynamics/styles.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/deposit/demandDeposit/initialState/constants.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/deposit/demandDeposit/initialState/initialStateNewEntry.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/deposit/demandDeposit/initialState/initialStateOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/deposit/demandDeposit/initialState/initialStateTabs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/deposit/demandDeposit/initialState/styles.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/deposit/demandDeposit/taxContributionCalculation/constants.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/deposit/demandDeposit/taxContributionCalculation/taxContributionCalculationOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/deposit/fixedDeposit/financeDeposit/constants.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/deposit/fixedDeposit/financeDeposit/financeDepositOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/deposit/fixedDeposit/financeDeposit/financeDepositTabs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/deposit/fixedDeposit/financeDeposit/newEntry.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/deposit/fixedDeposit/financeDeposit/styles.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/deposit/fixedDeposit/materialDeposit/constants.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/deposit/fixedDeposit/materialDeposit/materialDepositOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/deposit/fixedDeposit/materialDeposit/materialDepositTabs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/deposit/fixedDeposit/materialDeposit/newEntryMaterialDeposit.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/deposit/fixedDeposit/materialDeposit/styles.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/deposit/fixedDeposit/testament/constants.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/deposit/fixedDeposit/testament/newTestamentEntry.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/deposit/fixedDeposit/testament/styles.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/deposit/fixedDeposit/testament/testamentOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/deposit/fixedDeposit/testament/testamentTabs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/deposit/landingPages/demandDepositLandingPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/deposit/landingPages/depositLandingPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/deposit/landingPages/fixedDepositLandingPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/deposit/landingPages/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/confiscation/addConfiscation/addConfiscation.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":29,"column":27,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":29,"endColumn":30,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[969,972],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[969,972],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {Controller, useForm} from 'react-hook-form';\nimport {FinesFormContainer, Row, Amount, LabeledDivider} from './styles.ts';\nimport {mockDropdownOptions} from '../../../../constants.ts';\nimport {Dropdown, Datepicker, Input, Button, Typography, Table} from 'client-library';\nimport {useEffect} from 'react';\nimport Footer from '../../../../shared/footer.ts';\nimport {tableHeadsAddFines} from '../constants.ts';\n\nconst initialValues = {\n  vrsta_akta: null,\n  potkategorija_akta: null,\n  broj_resenja: null,\n  datum_rjesenja: null,\n  subjekat: null,\n  jmbg: null,\n  prebivaliste: null,\n  visina_kazne: 0,\n  dvije_trecine_kazne: 0,\n  poziv_na_broj_odobrenja: null,\n  poziv_na_broj_zaduzenja: null,\n  konto: null,\n  opis_konta: null,\n  datum_izvrsnosti: null,\n  rok_za_placanje: null,\n  opis: null,\n};\nconst AddConfiscation = () => {\n  const {control, register, handleSubmit, reset, watch, setValue} = useForm({defaultValues: initialValues});\n  const onSubmit = (data: any) => {\n    // TODO add submit api call\n    console.log(data);\n  };\n\n  const visina_kazne = watch('visina_kazne');\n\n  useEffect(() => {\n    if (!visina_kazne) return;\n    setValue('dvije_trecine_kazne', Math.ceil((visina_kazne * 2) / 3));\n  }, [visina_kazne]);\n\n  return (\n    <FinesFormContainer>\n      <Row>\n        <Controller\n          name=\"vrsta_akta\"\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Dropdown\n              name={name}\n              value={value}\n              onChange={onChange}\n              label=\"VRSTA AKTA:\"\n              placeholder={'Odaberite vrstu akta'}\n              options={mockDropdownOptions}\n            />\n          )}\n        />\n        <Controller\n          name=\"potkategorija_akta\"\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Dropdown\n              name={name}\n              value={value}\n              onChange={onChange}\n              label=\"POTKATEGORIJA AKTA:\"\n              placeholder={'Odaberite potkategoriju akta'}\n              options={mockDropdownOptions}\n            />\n          )}\n        />\n      </Row>\n      <Row>\n        <Input\n          {...register('broj_resenja')}\n          label=\"BROJ RJEŠENJA / PRESUDE:\"\n          type={'number'}\n          inputMode={'decimal'}\n          leftContent={<div>€</div>}\n        />\n        <Controller\n          name={'datum_rjesenja'}\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Datepicker\n              name={name}\n              selected={value ? new Date(value) : ''}\n              label=\"DATUM RJEŠENJA:\"\n              onChange={onChange}\n            />\n          )}\n        />\n      </Row>\n      <Row>\n        <Input {...register('subjekat')} label=\"Subjekat:\" />\n      </Row>\n      <Row>\n        <Input {...register('jmbg')} label=\"JMBG:\" />\n        <Input {...register('prebivaliste')} label=\"PREBIVALIŠTE:\" />\n      </Row>\n      <Row>\n        <Input\n          {...register('visina_kazne')}\n          label=\"VISINA KAZNE:\"\n          type={'number'}\n          inputMode={'decimal'}\n          leftContent={<div>€</div>}\n        />\n        <Input\n          {...register('dvije_trecine_kazne')}\n          label=\"2/3 KAZNE:\"\n          type={'number'}\n          inputMode={'decimal'}\n          leftContent={<div>€</div>}\n        />\n      </Row>\n      <Row>\n        <Input {...register('poziv_na_broj_odobrenja')} label=\"POZIV NA BROJ ODOBRENJA:\" />\n        <Input {...register('poziv_na_broj_zaduzenja')} label=\"POZIV NA BROJ ZADUŽENJA:\" />\n      </Row>\n      <Row>\n        <Controller\n          name=\"konto\"\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Dropdown\n              name={name}\n              value={value}\n              onChange={onChange}\n              label=\"KONTO:\"\n              placeholder={'Odaberite KONTO'}\n              options={mockDropdownOptions}\n            />\n          )}\n        />\n        <Input {...register('opis_konta')} label=\"OPIS KONTA:\" />\n      </Row>\n      <Row>\n        <Controller\n          name={'datum_izvrsnosti'}\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Datepicker\n              name={name}\n              selected={value ? new Date(value) : ''}\n              label=\"DATUM IZVRŠOSTI:\"\n              onChange={onChange}\n            />\n          )}\n        />{' '}\n        <Controller\n          name={'rok_za_placanje'}\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Datepicker\n              name={name}\n              selected={value ? new Date(value) : ''}\n              label=\"ROK ZA PLAĆANJE UKUPNE KAZNE:\"\n              onChange={onChange}\n            />\n          )}\n        />\n      </Row>\n      <Row>\n        <Input {...register('opis')} label=\"Opis:\" textarea />\n      </Row>\n      <Amount>\n        <Typography style={{fontWeight: 600, marginBottom: 10}} variant={'bodySmall'} content={'Platiti do:'} />\n        <Typography variant=\"bodySmall\" content=\"100 €\" />\n      </Amount>\n      <LabeledDivider>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"DETALJI PLAĆANJA:\" />\n      </LabeledDivider>\n      <Table tableHeads={tableHeadsAddFines} data={[]} />\n      <Amount>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"UKUPNO:\" />\n        <Typography variant=\"bodySmall\" content=\"100 €\" />\n      </Amount>\n      <Amount>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"PREMAŠEN IZNOS:\" />\n        <Typography variant=\"bodySmall\" content=\"100 €\" />\n      </Amount>\n      <LabeledDivider>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"PREGLED PLAĆANJA:\" />\n      </LabeledDivider>\n      <Amount>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"IZREČENA KAZNA:\" />\n        <Typography variant=\"bodySmall\" content=\"100 €\" />\n      </Amount>\n      <Amount>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"UPLAĆENA KAZNA:\" />\n        <Typography variant=\"bodySmall\" content=\"100 €\" />\n      </Amount>\n      <Amount>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"IZREČENI SUDSKI TROŠKOVI:\" />\n        <Typography variant=\"bodySmall\" content=\"100 €\" />\n      </Amount>\n      <Amount>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"UMANJENJE KAZNE:\" />\n        <Typography variant=\"bodySmall\" content=\"100 €\" />\n      </Amount>\n      <Amount>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"UPLAĆENI SUDSKI TROŠKOVI:\" />\n        <Typography variant=\"bodySmall\" content=\"100 €\" />\n      </Amount>\n      <Footer>\n        <Button content=\"Odustani\" variant=\"secondary\" style={{width: 130}} onClick={() => reset()} />\n        <Button content=\"Sačuvaj\" variant=\"primary\" onClick={handleSubmit(onSubmit)} />\n      </Footer>\n    </FinesFormContainer>\n  );\n};\n\nexport default AddConfiscation;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/confiscation/addConfiscation/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/confiscation/confiscation.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/confiscation/confiscationOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/confiscation/constants.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/confiscation/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/fines/addFine/addFine.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/fines/addFine/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/fines/constants.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/fines/fineDetails/fineDetails.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/fines/fines.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/fines/finesOverview.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":50,"column":34,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":50,"endColumn":37,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1888,1891],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1888,1891],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":65,"column":31,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":65,"endColumn":34,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2218,2221],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2218,2221],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {Pagination, SearchIcon, Table, Theme, TrashIcon} from 'client-library';\nimport {useState} from 'react';\nimport {FilterDropdown, FilterInput, Filters} from '../../../screens/budget/planning/budgetList/styles.ts';\nimport {PAGE_SIZE} from '../../../constants.ts';\nimport useGetFines from '../../../services/graphQL/fines/useGetFines.ts';\nimport {useDebounce} from '../../../utils/useDebounce.ts';\nimport {Header} from './styles.ts';\nimport {TypeOfFines, tableHeadsFinesOverview, defaultDropdownOption} from './constants.tsx';\nimport useAppContext from '../../../context/useAppContext.ts';\nimport {FinesOverviewItem} from '../../../types/graphQL/finesOverview.ts';\nimport useDeleteFine from '../../../services/graphQL/fines/useDeleteFine.ts';\nimport {ConfirmationModal} from '../../../shared/confirmationModal/confirmationModal.tsx';\n\nconst initialValues = {\n  act_type_id: undefined,\n};\n\nconst FinesOverview = () => {\n  const [page, setPage] = useState(1);\n  const [filters, setFilters] = useState(initialValues);\n  const [search, setSearch] = useState('');\n  const [showDeleteFineModal, setShowDeleteFineModal] = useState<number | null>(null);\n\n  const debouncedSearch = useDebounce(search, 500);\n  const {\n    navigation: {navigate},\n    alert,\n  } = useAppContext();\n\n  const {fines, total, refetch} = useGetFines({page: page, size: PAGE_SIZE, ...filters, search: debouncedSearch});\n  const {deleteFine} = useDeleteFine();\n\n  const handleDeleteFine = async () => {\n    if (!showDeleteFineModal) return;\n    await deleteFine(\n      showDeleteFineModal,\n      () => {\n        refetch();\n        alert.success('Uspješno obrisano.');\n      },\n      () => alert.error('Greška. Brisanje nije uspjelo.'),\n    );\n    setShowDeleteFineModal(null);\n  };\n\n  const onSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  };\n\n  const onFilterChange = (value: any, name: string) => {\n    setFilters({...filters, [name]: value?.id});\n  };\n\n  const onPageChange = (page: number) => {\n    setPage(page + 1);\n  };\n\n  return (\n    <>\n      <Header>\n        <Filters>\n          <FilterDropdown\n            name=\"act_type_id\"\n            value={filters?.act_type_id}\n            onChange={(value: any) => onFilterChange(value, 'act_type_id')}\n            label=\"VRSTA KAZNE:\"\n            options={[defaultDropdownOption, ...TypeOfFines] || []}\n          />\n\n          <FilterInput\n            label=\"PRETRAGA:\"\n            rightContent={<SearchIcon />}\n            name=\"search\"\n            onChange={onSearch}\n            value={search}\n          />\n        </Filters>\n      </Header>\n      <Table\n        tableHeads={tableHeadsFinesOverview}\n        data={fines}\n        style={{marginBottom: 22}}\n        emptyMessage={'Još uvjek nema kazni'}\n        onRowClick={(row: FinesOverviewItem) => navigate(`/finance/fines-taxes/fines/${row.id}`)}\n        tableActions={[\n          {\n            name: 'delete',\n            onClick: row => setShowDeleteFineModal(row.id),\n            icon: <TrashIcon stroke={Theme?.palette?.gray800} />,\n          },\n        ]}\n      />\n\n      <Pagination\n        pageCount={total ? Math.ceil(total / PAGE_SIZE) : 1}\n        onChange={onPageChange}\n        variant=\"filled\"\n        itemsPerPage={PAGE_SIZE}\n        pageRangeDisplayed={3}\n        style={{marginTop: '20px'}}\n      />\n      <ConfirmationModal\n        open={!!showDeleteFineModal}\n        onClose={() => setShowDeleteFineModal(null)}\n        onConfirm={() => handleDeleteFine()}\n      />\n    </>\n  );\n};\n\nexport default FinesOverview;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/fines/form/fineForm.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":72,"column":33,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":72,"endColumn":36,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2968,2971],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2968,2971],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'account' is assigned a value but never used.","line":73,"column":12,"nodeType":"Identifier","messageId":"unusedVar","endLine":73,"endColumn":19},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'court_account' is assigned a value but never used.","line":73,"column":21,"nodeType":"Identifier","messageId":"unusedVar","endLine":73,"endColumn":34},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'created_at' is assigned a value but never used.","line":73,"column":36,"nodeType":"Identifier","messageId":"unusedVar","endLine":73,"endColumn":46},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'updated_at' is assigned a value but never used.","line":73,"column":48,"nodeType":"Identifier","messageId":"unusedVar","endLine":73,"endColumn":58},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'file' is assigned a value but never used.","line":73,"column":60,"nodeType":"Identifier","messageId":"unusedVar","endLine":73,"endColumn":64},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'status' is assigned a value but never used.","line":73,"column":66,"nodeType":"Identifier","messageId":"unusedVar","endLine":73,"endColumn":72},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'fine_fee_details' is assigned a value but never used.","line":73,"column":74,"nodeType":"Identifier","messageId":"unusedVar","endLine":73,"endColumn":90},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":94,"column":15,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":94,"endColumn":18,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3761,3764],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3761,3764],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {Controller, useForm} from 'react-hook-form';\nimport {Dropdown, Datepicker, Input, Typography, FileUpload, Button, Theme} from 'client-library';\nimport {Container, Row} from './styles.ts';\nimport {actTypeOptions, generateDropdownOptions, requiredError} from '../../../../constants.ts';\nimport {useEffect, useMemo, useState} from 'react';\nimport Footer from '../../../../shared/footer.ts';\nimport useGetCountOverview from '../../../../services/graphQL/counts/useGetCountOverview.ts';\nimport useInsertFine from '../../../../services/graphQL/fines/useInsertFine.ts';\nimport useAppContext from '../../../../context/useAppContext.ts';\nimport {parseDate, parseDateForBackend} from '../../../../utils/dateUtils.ts';\nimport {FineForm} from '../../../../types/graphQL/fineForm.ts';\nimport {yupResolver} from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport {FinesOverviewItem} from '../../../../types/graphQL/finesOverview.ts';\nimport FileList from '../../../../components/fileList/fileList.tsx';\n\nconst fineSchema = yup.object().shape({\n  act_type: yup.object().shape({\n    id: yup.number().required(requiredError),\n    title: yup.string().required(),\n  }),\n  decision_number: yup.string().required(requiredError),\n  decision_date: yup.date().required(requiredError),\n  subject: yup.string().required(requiredError),\n  jmbg: yup\n    .string()\n    .matches(/^(0[1-9]|[12][0-9]|3[01])(0[1-9]|1[0-2])(\\d{3})(2[1-9]|29)\\d{3}\\d{1}$/, 'Neispravan JMBG format')\n    .length(13, 'JMBG mora da ima 13 cifara')\n    .required(requiredError),\n  account_id: yup.object().shape({\n    id: yup.number().required(requiredError),\n    title: yup.string().required(requiredError),\n  }),\n  residence: yup.string().required(requiredError),\n  amount: yup.number().typeError('Morate unijeti broj').required(requiredError),\n  payment_reference_number: yup.string().required(requiredError),\n  debit_reference_number: yup.string().required(requiredError),\n  execution_date: yup.date().required(requiredError),\n  payment_deadline_date: yup.date().required(requiredError),\n  court_costs: yup.number(),\n  description: yup.string(),\n  court_account_id: yup.object().shape({\n    id: yup.number().required(requiredError),\n    title: yup.string().required(requiredError),\n  }),\n});\n\ntype FineEntryForm = yup.InferType<typeof fineSchema>;\ninterface FineFormProps {\n  fine?: FinesOverviewItem;\n}\nconst FineForm = ({fine}: FineFormProps) => {\n  const {\n    control,\n    register,\n    handleSubmit,\n    reset,\n    formState: {errors},\n  } = useForm<FineEntryForm>({resolver: yupResolver(fineSchema)});\n  const [uploadedFile, setUploadedFile] = useState<FileList>();\n  const {counts} = useGetCountOverview({});\n  const {insertFine} = useInsertFine();\n  const {\n    alert,\n    fileService: {uploadFile},\n    navigation: {navigate},\n  } = useAppContext();\n\n  const countsDropdownOptions = useMemo(() => {\n    return generateDropdownOptions(counts);\n  }, [counts]);\n  const onSubmit = async (data: any) => {\n    const {account, court_account, created_at, updated_at, file, status, fine_fee_details, ...rest} = data;\n    let payload: FineForm = {\n      ...rest,\n      amount: Number(data.amount),\n      court_costs: Number(data.court_costs),\n      act_type: data.act_type.id,\n      account_id: data.account_id.id,\n      court_account_id: data.court_account_id.id,\n      decision_date: parseDateForBackend(data.decision_date),\n      execution_date: parseDateForBackend(data.execution_date),\n      payment_deadline_date: parseDateForBackend(data.payment_deadline_date),\n    };\n\n    if (uploadedFile) {\n      const formData = new FormData();\n      const fileArray = Array.from(uploadedFile);\n\n      formData.append('file', fileArray[0]);\n\n      await uploadFile(\n        formData,\n        (res: any) => {\n          setUploadedFile(undefined);\n          payload = {...payload, file: [res[0]?.id]};\n        },\n        () => {\n          alert.error('Greška pri čuvanju! Fajlovi nisu učitani.');\n          return;\n        },\n      );\n\n      insertOrUpdateFine(payload);\n    } else {\n      insertOrUpdateFine(payload);\n    }\n  };\n\n  useEffect(() => {\n    if (fine) {\n      reset({\n        ...fine,\n        act_type: actTypeOptions.find(option => option.id === fine.act_type),\n        account_id: countsDropdownOptions?.find(count => count.id === fine.account.id),\n        court_account_id: countsDropdownOptions?.find(count => count.id === fine.court_account.id),\n        decision_date: new Date(fine.decision_date),\n        execution_date: new Date(fine.execution_date),\n        payment_deadline_date: new Date(fine.payment_deadline_date),\n      });\n    }\n  }, [fine]);\n\n  const handleUpload = (files: FileList) => {\n    setUploadedFile(files);\n  };\n\n  const insertOrUpdateFine = async (payload: FineForm) => {\n    // update fine\n    if (fine && fine.id) {\n      const updatedPayload = {...payload, id: fine.id};\n\n      await insertFine(\n        updatedPayload,\n        () => {\n          // refetch && refetch();\n          alert.success('Kazna uspješno izmijenjena');\n        },\n        () => {\n          alert.error('Došlo je do greške prilikom izmjene kazne');\n        },\n      );\n      return;\n    }\n\n    // create fine\n    await insertFine(\n      payload,\n      id => {\n        navigate(`/finance/fines-taxes/fines/${id}`);\n        alert.success('Kazna uspješno kreirana');\n      },\n      () => {\n        alert.error('Došlo je do greške prilikom kreiranja kazne');\n      },\n    );\n\n    console.log('create', payload);\n  };\n  return (\n    <Container>\n      <Row>\n        <Controller\n          name=\"act_type\"\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Dropdown\n              name={name}\n              value={value}\n              onChange={onChange}\n              label=\"VRSTA AKTA:\"\n              placeholder={'Odaberite vrstu akta'}\n              options={actTypeOptions}\n              isRequired\n              error={errors.act_type?.id?.message}\n            />\n          )}\n        />\n        <Input {...register('subject')} label=\"Subjekat:\" isRequired error={errors.subject?.message} />\n      </Row>\n      <Row>\n        <Input\n          {...register('decision_number')}\n          label=\"BROJ RJEŠENJA / PRESUDE:\"\n          type={'number'}\n          isRequired\n          error={errors.decision_number?.message}\n        />\n        <Controller\n          name={'decision_date'}\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Datepicker\n              name={name}\n              selected={value ? new Date(value) : ''}\n              label=\"DATUM RJEŠENJA:\"\n              onChange={onChange}\n              isRequired\n              error={errors.decision_date?.message}\n            />\n          )}\n        />\n      </Row>\n      <Row>\n        <Input {...register('jmbg')} label=\"JMBG:\" isRequired error={errors.jmbg?.message} />\n        <Input {...register('residence')} label=\"PREBIVALIŠTE:\" isRequired error={errors.residence?.message} />\n      </Row>\n      <Row>\n        <Input\n          {...register('amount')}\n          label=\"VISINA KAZNE:\"\n          type={'number'}\n          inputMode={'decimal'}\n          leftContent={<div>€</div>}\n          isRequired\n          error={errors.amount?.message}\n        />\n        <Input\n          value={fine?.fine_fee_details.fee_amount_grace_period.toFixed(2)}\n          label={`2/3 KAZNE - UKOLIKO UPLATITE DO ${parseDate(\n            fine?.fine_fee_details.fee_amount_grace_period_due_date ?? null,\n          )}`}\n          type={'number'}\n          inputMode={'decimal'}\n          leftContent={<div style={{color: Theme.palette.gray300}}>€</div>}\n          disabled\n        />\n      </Row>\n      <Row>\n        <Input\n          {...register('payment_reference_number')}\n          label=\"POZIV NA BROJ ODOBRENJA:\"\n          isRequired\n          error={errors.payment_reference_number?.message}\n        />\n        <Input\n          {...register('debit_reference_number')}\n          label=\"POZIV NA BROJ ZADUŽENJA:\"\n          isRequired\n          error={errors.debit_reference_number?.message}\n        />\n      </Row>\n      <Row>\n        <Controller\n          name={'execution_date'}\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Datepicker\n              name={name}\n              selected={value ? new Date(value) : ''}\n              label=\"DATUM IZVRŠNOSTI:\"\n              onChange={onChange}\n              isRequired\n              error={errors.execution_date?.message}\n            />\n          )}\n        />\n        <Controller\n          name={'payment_deadline_date'}\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Datepicker\n              name={name}\n              selected={value ? new Date(value) : ''}\n              label=\"ROK ZA PLAĆANJE UKUPNE KAZNE:\"\n              onChange={onChange}\n              isRequired\n              error={errors.payment_deadline_date?.message}\n            />\n          )}\n        />\n      </Row>\n      <Row>\n        <Input {...register('description')} label=\"OPIS:\" textarea />\n      </Row>\n      <Row>\n        <Controller\n          name=\"account_id\"\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Dropdown\n              name={name}\n              value={value}\n              onChange={onChange}\n              label=\"KONTO:\"\n              placeholder={'Odaberite konto'}\n              options={countsDropdownOptions}\n              isRequired\n              error={errors.account_id?.message}\n            />\n          )}\n        />\n        <Controller\n          name=\"court_account_id\"\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Dropdown\n              name={name}\n              value={value}\n              onChange={onChange}\n              label=\"KONTO ZA SUDSKE TROŠKOVE:\"\n              placeholder={'Odaberite konto za sudske troškove'}\n              options={countsDropdownOptions}\n              isRequired\n            />\n          )}\n        />\n\n        <Input\n          {...register('court_costs')}\n          label=\"SUDSKI TROŠKOVI:\"\n          type={'number'}\n          inputMode={'decimal'}\n          leftContent={<div>€</div>}\n          style={{flexGrow: 1 / 2}}\n        />\n      </Row>\n      <Row>\n        <FileUpload\n          icon={null}\n          files={uploadedFile}\n          variant=\"secondary\"\n          onUpload={handleUpload}\n          note={<Typography variant=\"bodySmall\" content=\"Dodaj fajl\" />}\n          buttonText=\"Učitaj\"\n        />\n        <FileList files={(fine?.file && fine?.file) ?? []} />\n      </Row>\n      <Footer>\n        <Button content=\"Odustani\" variant=\"secondary\" style={{width: 130}} onClick={() => reset()} />\n        <Button content=\"Sačuvaj\" variant=\"primary\" onClick={handleSubmit(onSubmit)} />\n      </Footer>\n    </Container>\n  );\n};\n\nexport default FineForm;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/fines/form/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/fines/paymentDetails/paymentDetails.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'paidSum' is assigned a value but never used.","line":105,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":105,"endColumn":16},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":129,"column":31,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":129,"endColumn":34,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[4266,4269],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[4266,4269],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-non-null-assertion","severity":1,"message":"Forbidden non-null assertion.","line":156,"column":23,"nodeType":"TSNonNullExpression","messageId":"noNonNull","endLine":156,"endColumn":37,"suggestions":[{"messageId":"suggestOptionalChain","fix":{"range":[5229,5230],"text":"?."},"desc":"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator."}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'originalID' is assigned a value but never used.","line":157,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":157,"endColumn":24},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'created_at' is assigned a value but never used.","line":157,"column":26,"nodeType":"Identifier","messageId":"unusedVar","endLine":157,"endColumn":36},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'updated_at' is assigned a value but never used.","line":157,"column":38,"nodeType":"Identifier","messageId":"unusedVar","endLine":157,"endColumn":48},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'status' is assigned a value but never used.","line":157,"column":50,"nodeType":"Identifier","messageId":"unusedVar","endLine":157,"endColumn":56}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\n  Typography,\n  Table,\n  TableHead,\n  Dropdown,\n  Input,\n  Datepicker,\n  EditIconTwo,\n  Theme,\n  TrashIcon,\n  CheckIcon,\n  CloseIcon,\n} from 'client-library';\nimport {Amount, FinePaymentDetailsWrapper, LabeledDivider} from './styles.ts';\nimport {Controller, useFieldArray, useForm} from 'react-hook-form';\nimport * as yup from 'yup';\nimport {FineFeeDetails, FinesOverviewItem} from '../../../../types/graphQL/finesOverview.ts';\nimport useGetPayments from '../../../../services/graphQL/payments/useGetPayments.ts';\nimport {useEffect, useState} from 'react';\nimport {requiredError} from '../../../../constants.ts';\nimport {FinePaymentMethods} from '../constants.tsx';\nimport {roundCurrency} from '../../../../utils/roundCurrency.ts';\nimport {PaymentDetails} from './types.ts';\nimport useInsertPayment from '../../../../services/graphQL/payments/useInsertPayment.ts';\nimport useAppContext from '../../../../context/useAppContext.ts';\nimport {parseDate, parseDateForBackend} from '../../../../utils/dateUtils.ts';\nimport useDeletePayment from '../../../../services/graphQL/payments/useDeletePayment.ts';\nimport {ConfirmationModal} from '../../../../shared/confirmationModal/confirmationModal.tsx';\n\nconst singlePaymentSchema = yup.object().shape({\n  id: yup.number().required(requiredError),\n  payment_method: yup.object().shape({\n    id: yup.number().required(),\n    title: yup.string().required(requiredError),\n  }),\n  amount: yup.number().required(requiredError).min(1, 'Iznos mora biti veći od 0'),\n  payment_date: yup.date().required(requiredError),\n  payment_due_date: yup.date().required(requiredError),\n  receipt_number: yup.string().required(requiredError),\n  payment_reference_number: yup.string().required(requiredError),\n  debit_reference_number: yup.string().required(requiredError),\n  originalID: yup.number().required(requiredError),\n  fine_id: yup.number().required(),\n  created_at: yup.string().optional(),\n  updated_at: yup.string().optional(),\n  status: yup.object().shape({\n    id: yup.number().optional(),\n    title: yup.string().optional(),\n  }),\n});\n\nconst paymentsSchema = yup.object().shape({\n  payments: yup.array().of(singlePaymentSchema),\n});\n\ntype PaymentEntryForm = yup.InferType<typeof paymentsSchema>;\ntype PaymentRow = yup.InferType<typeof singlePaymentSchema>;\n\ninterface PaymentFormProps {\n  fine: FinesOverviewItem;\n  refetchFine: () => Promise<void>;\n}\nconst PaymentDetails = ({fine, refetchFine}: PaymentFormProps) => {\n  const fineFeeDetails: FineFeeDetails = fine?.fine_fee_details;\n  const {payments, refetch} = useGetPayments(fine?.id);\n  const {insertPayment} = useInsertPayment();\n  const {deletePayment} = useDeletePayment();\n  const {alert} = useAppContext();\n\n  const [editRowId, setEditRowId] = useState<number | null>(null);\n  const [showDeletePaymentModal, setShowDeletePaymentModal] = useState<number | null>(null);\n\n  const {\n    control,\n    register,\n    handleSubmit,\n    formState: {errors},\n    setError,\n  } = useForm<PaymentEntryForm>({});\n\n  const {fields, append, remove} = useFieldArray({name: 'payments', control});\n  const appendLastRow = () =>\n    append({\n      id: 0,\n      payment_method: {\n        id: 0,\n        title: '',\n      },\n      amount: 0,\n      payment_date: new Date(),\n      payment_due_date: new Date(),\n      receipt_number: '',\n      payment_reference_number: '',\n      debit_reference_number: '',\n      originalID: 0,\n      fine_id: fine.id,\n      status: {\n        id: 0,\n        title: '',\n      },\n    });\n\n  useEffect(() => {\n    remove();\n    let paidSum = 0;\n    if (payments.length) {\n      payments.forEach(payment => {\n        append({\n          ...payment,\n          // need to save original id to be able to edit/delete the payment because useFieldArray will change it\n          originalID: payment.id,\n          payment_method: FinePaymentMethods.find(method => method.title === payment.payment_method.title) ?? {\n            id: 0,\n            title: '',\n          },\n          payment_date: new Date(payment?.payment_date),\n          payment_due_date: new Date(payment?.payment_due_date),\n        });\n\n        paidSum += payment.amount;\n      });\n      appendLastRow();\n      return;\n    }\n\n    appendLastRow();\n  }, [payments]);\n\n  const isRowDisabled = (row: any) => {\n    return editRowId ? editRowId !== row.originalID : !!row.originalID;\n  };\n\n  const validateSingleRow = async (rowData: PaymentRow, id: number) => {\n    try {\n      // Validate using Yup directly\n      await singlePaymentSchema.validate(rowData, {abortEarly: false});\n      return true; // Validation passed\n    } catch (err) {\n      if (err instanceof yup.ValidationError) {\n        err.inner.forEach(error => {\n          setError(`payments.${id}.${error.path}` as never, {type: 'manual', message: error.message});\n        });\n      }\n    }\n  };\n\n  const handleSubmitPayment = async (data: PaymentEntryForm) => {\n    if (data.payments?.length) {\n      const test = data.payments?.findIndex(item => item.originalID === editRowId);\n      const selectedRow = test != -1 ? test : fields.length - 1;\n\n      const isValid = await validateSingleRow(data?.payments[selectedRow], selectedRow);\n\n      if (!isValid) return;\n\n      const payment = data.payments![selectedRow];\n      const {originalID, created_at, updated_at, status, ...updatedPayment} = payment;\n      const parsedPaymentDate = parseDateForBackend(payment.payment_date);\n      const parsedPaymentDueDate = parseDateForBackend(payment.payment_due_date);\n      if (!parsedPaymentDate || !parsedPaymentDueDate) return;\n\n      const payload = {\n        ...updatedPayment,\n        payment_method: payment.payment_method.id,\n        payment_date: parsedPaymentDate,\n        payment_due_date: parsedPaymentDueDate,\n      };\n      await insertPayment(\n        payload,\n        () => {\n          refetch();\n          refetchFine();\n          alert.success('Uspješno sačuvano.');\n          setEditRowId(null);\n        },\n        () => alert?.error('Greška. Promjene nisu sačuvane.'),\n      );\n    }\n  };\n\n  const handleDeletePayment = async () => {\n    const paymentIndex = payments.findIndex(payment => payment.id === showDeletePaymentModal);\n    if (!showDeletePaymentModal || paymentIndex === -1) return;\n    await deletePayment(\n      showDeletePaymentModal,\n      () => {\n        remove(paymentIndex);\n        refetchFine();\n        alert.success('Uspješno obrisano.');\n      },\n      () => alert.error('Greška. Brisanje nije uspjelo.'),\n    );\n    setShowDeletePaymentModal(null);\n  };\n\n  const tableHeadsPayments: TableHead[] = [\n    {\n      title: 'Način plaćanja',\n      accessor: 'payment_method',\n      type: 'custom',\n      renderContents: (_item, row, index) => {\n        return (\n          <Controller\n            name={`payments.${index}.payment_method`}\n            control={control}\n            render={({field: {name, onChange, value}}) => (\n              <Dropdown\n                style={{width: '180px'}}\n                name={name}\n                onChange={onChange}\n                value={value ?? FinePaymentMethods.find(method => method.title === value)}\n                options={FinePaymentMethods}\n                isDisabled={isRowDisabled(row)}\n                error={isRowDisabled(row) ? '' : errors?.payments?.[index]?.payment_method?.title?.message}\n              />\n            )}\n          />\n        );\n      },\n    },\n    {\n      title: 'Iznos',\n      accessor: 'amount',\n      type: 'custom',\n      renderContents: (_item, row, index) => {\n        return (\n          <Input\n            {...register(`payments.${index}.amount`)}\n            type=\"number\"\n            leftContent={\n              <div style={{color: isRowDisabled(row) ? Theme.palette.gray300 : Theme.palette.gray800}}>€</div>\n            }\n            disabled={isRowDisabled(row)}\n            error={errors?.payments?.[index]?.amount?.message}\n          />\n        );\n      },\n    },\n    {\n      title: 'Datum uplate',\n      accessor: 'payment_date',\n      type: 'custom',\n      renderContents: (_item, row, index) => {\n        return (\n          <Controller\n            name={`payments.${index}.payment_date`}\n            control={control}\n            render={({field: {name, onChange, value}}) => (\n              <Datepicker\n                name={name}\n                onChange={onChange}\n                selected={value ? new Date(value) : ''}\n                disabled={isRowDisabled(row)}\n                error={errors?.payments?.[index]?.payment_date?.message}\n                popperProps={{\n                  strategy: 'fixed', // fixes datepicker going behind other elements\n                  placement: 'top',\n                }}\n              />\n            )}\n          />\n        );\n      },\n    },\n    {\n      title: 'Uplatiti do',\n      accessor: 'payment_due_date',\n      type: 'custom',\n      renderContents: (_item, row, index) => {\n        return (\n          <Controller\n            name={`payments.${index}.payment_due_date`}\n            control={control}\n            render={({field: {name, onChange, value}}) => (\n              <Datepicker\n                name={name}\n                onChange={onChange}\n                selected={value ? new Date(value) : ''}\n                disabled={isRowDisabled(row)}\n                error={errors?.payments?.[index]?.payment_due_date?.message}\n                popperProps={{\n                  strategy: 'fixed', // fixes datepicker going behind other elements\n                  placement: 'top',\n                }}\n              />\n            )}\n          />\n        );\n      },\n    },\n    {\n      title: 'Broj izvoda',\n      accessor: 'receipt_number',\n      type: 'custom',\n      renderContents: (_item, row, index) => {\n        return (\n          <Input\n            {...register(`payments.${index}.receipt_number`)}\n            disabled={isRowDisabled(row)}\n            error={errors?.payments?.[index]?.receipt_number?.message}\n            key={`payments.${index}.receipt_number`}\n          />\n        );\n      },\n    },\n    {\n      title: 'Poziv na broj odobrenja',\n      accessor: 'payment_reference_number',\n      type: 'custom',\n      renderContents: (_item, row, index) => {\n        return (\n          <Input\n            {...register(`payments.${index}.payment_reference_number`)}\n            disabled={isRowDisabled(row)}\n            error={errors?.payments?.[index]?.payment_reference_number?.message}\n          />\n        );\n      },\n    },\n    {\n      title: 'Poziv na broj zaduženja',\n      accessor: 'debit_reference_number',\n      type: 'custom',\n      renderContents: (_item, row, index) => {\n        return (\n          <Input\n            {...register(`payments.${index}.debit_reference_number`)}\n            disabled={isRowDisabled(row)}\n            error={errors?.payments?.[index]?.debit_reference_number?.message}\n          />\n        );\n      },\n    },\n    {title: '', accessor: 'TABLE_ACTIONS', type: 'tableActions'},\n  ];\n\n  return (\n    <>\n      <Amount style={{marginTop: 10}}>\n        <Typography style={{fontWeight: 600, marginBottom: 10}} variant={'bodySmall'} content={'Platiti do:'} />\n        <Typography variant=\"bodySmall\" content={parseDate(fine?.payment_deadline_date)} />\n      </Amount>\n      <LabeledDivider>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"DETALJI PLAĆANJA:\" />\n      </LabeledDivider>\n      <Table\n        tableHeads={tableHeadsPayments}\n        data={fields}\n        tableActions={[\n          {\n            name: 'Otkaži',\n            onClick: () => setEditRowId(null),\n            icon: <CloseIcon stroke={Theme?.palette?.gray800} />,\n            shouldRender: row => !isRowDisabled(row) && !!row.originalID,\n          },\n          {\n            name: 'Plati',\n\n            onClick: handleSubmit(handleSubmitPayment),\n            icon: <CheckIcon stroke={Theme?.palette?.gray800} width={'20px'} height={'20px'} />,\n            shouldRender: row => !isRowDisabled(row) || !row.originalID,\n          },\n          {\n            name: 'Izmijeni',\n            onClick: row => setEditRowId(row.originalID),\n            icon: <EditIconTwo stroke={Theme?.palette?.gray800} />,\n            shouldRender: row => isRowDisabled(row) && !!row.originalID,\n          },\n          {\n            name: 'Izbriši',\n            onClick: row => setShowDeletePaymentModal(row.originalID),\n            icon: <TrashIcon stroke={Theme?.palette?.gray800} />,\n            shouldRender: row => !!row.originalID && (!editRowId || editRowId !== row.originalID),\n          },\n        ]}\n      />\n      <FinePaymentDetailsWrapper>\n        <Amount>\n          <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"UKUPNO:\" />\n          <Typography\n            variant=\"bodySmall\"\n            content={`${fineFeeDetails?.fee_all_payments_amount + fineFeeDetails?.fee_court_costs_paid} €`}\n          />\n        </Amount>\n      </FinePaymentDetailsWrapper>\n      {/*<Amount>*/}\n      {/*  <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"PREMAŠEN IZNOS:\" />*/}\n      {/*  <Typography variant=\"bodySmall\" content={`${fine?.amount} €`} />*/}\n      {/*</Amount>*/}\n      <LabeledDivider>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"PREGLED PLAĆANJA:\" />\n      </LabeledDivider>\n      <FinePaymentDetailsWrapper>\n        <Amount>\n          <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"IZREČENA KAZNA:\" />\n          <Typography variant=\"bodySmall\" content={`${fine?.amount} €`} />\n        </Amount>\n        <Amount>\n          <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"UPLAĆENA KAZNA:\" />\n          <Typography variant=\"bodySmall\" content={`${fineFeeDetails?.fee_all_payments_amount} €`} />\n        </Amount>\n        <Amount>\n          <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"UMANJENJE KAZNE:\" />\n          <Typography\n            variant=\"bodySmall\"\n            content={\n              fineFeeDetails?.fee_amount_grace_period_available\n                ? roundCurrency(fine?.amount - fineFeeDetails?.fee_amount_grace_period)\n                : '0.00 €'\n            }\n          />\n        </Amount>\n        <Amount>\n          <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"PREOSTALO ZA UPLATU:\" />\n          <Typography variant=\"bodySmall\" content={roundCurrency(fineFeeDetails?.fee_left_to_pay_amount)} />\n        </Amount>\n        <Amount style={{marginTop: 20}}>\n          <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"IZREČENI SUDSKI TROŠKOVI:\" />\n          <Typography variant=\"bodySmall\" content={`${fine?.court_costs} €`} />\n        </Amount>\n        <Amount>\n          <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"UPLAĆENI SUDSKI TROŠKOVI:\" />\n          <Typography variant=\"bodySmall\" content={`${fineFeeDetails?.fee_court_costs_paid} €`} />\n        </Amount>\n        <Amount>\n          <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"PREOSTALO ZA UPLATU:\" />\n          <Typography variant=\"bodySmall\" content={roundCurrency(fineFeeDetails?.fee_court_costs_left_to_pay_amount)} />\n        </Amount>\n      </FinePaymentDetailsWrapper>\n      <ConfirmationModal\n        open={!!showDeletePaymentModal}\n        onClose={() => setShowDeletePaymentModal(null)}\n        onConfirm={() => handleDeletePayment()}\n      />\n    </>\n  );\n};\n\nexport default PaymentDetails;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/fines/paymentDetails/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/fines/paymentDetails/types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/fines/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/flatRate/addFlatRate/addFlatRate.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":29,"column":27,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":29,"endColumn":30,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[965,968],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[965,968],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {Controller, useForm} from 'react-hook-form';\nimport {FinesFormContainer, Row, Amount, LabeledDivider} from './styles.ts';\nimport {mockDropdownOptions} from '../../../../constants.ts';\nimport {Dropdown, Datepicker, Input, Button, Typography, Table} from 'client-library';\nimport {useEffect} from 'react';\nimport Footer from '../../../../shared/footer.ts';\nimport {tableHeadsAddFines} from '../constants.ts';\n\nconst initialValues = {\n  vrsta_akta: null,\n  potkategorija_akta: null,\n  broj_resenja: null,\n  datum_rjesenja: null,\n  subjekat: null,\n  jmbg: null,\n  prebivaliste: null,\n  visina_kazne: 0,\n  dvije_trecine_kazne: 0,\n  poziv_na_broj_odobrenja: null,\n  poziv_na_broj_zaduzenja: null,\n  konto: null,\n  opis_konta: null,\n  datum_izvrsnosti: null,\n  rok_za_placanje: null,\n  opis: null,\n};\nconst AddFlatRate = () => {\n  const {control, register, handleSubmit, reset, watch, setValue} = useForm({defaultValues: initialValues});\n  const onSubmit = (data: any) => {\n    // TODO add submit api call\n    console.log(data);\n  };\n\n  const visina_kazne = watch('visina_kazne');\n\n  useEffect(() => {\n    if (!visina_kazne) return;\n    setValue('dvije_trecine_kazne', Math.ceil((visina_kazne * 2) / 3));\n  }, [visina_kazne]);\n\n  return (\n    <FinesFormContainer>\n      <Row>\n        <Controller\n          name=\"vrsta_akta\"\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Dropdown\n              name={name}\n              value={value}\n              onChange={onChange}\n              label=\"VRSTA AKTA:\"\n              placeholder={'Odaberite vrstu akta'}\n              options={mockDropdownOptions}\n            />\n          )}\n        />\n        <Controller\n          name=\"potkategorija_akta\"\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Dropdown\n              name={name}\n              value={value}\n              onChange={onChange}\n              label=\"POTKATEGORIJA AKTA:\"\n              placeholder={'Odaberite potkategoriju akta'}\n              options={mockDropdownOptions}\n            />\n          )}\n        />\n      </Row>\n      <Row>\n        <Input\n          {...register('broj_resenja')}\n          label=\"BROJ RJEŠENJA / PRESUDE:\"\n          type={'number'}\n          inputMode={'decimal'}\n          leftContent={<div>€</div>}\n        />\n        <Controller\n          name={'datum_rjesenja'}\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Datepicker\n              name={name}\n              selected={value ? new Date(value) : ''}\n              label=\"DATUM RJEŠENJA:\"\n              onChange={onChange}\n            />\n          )}\n        />\n      </Row>\n      <Row>\n        <Input {...register('subjekat')} label=\"Subjekat:\" />\n      </Row>\n      <Row>\n        <Input {...register('jmbg')} label=\"JMBG:\" />\n        <Input {...register('prebivaliste')} label=\"PREBIVALIŠTE:\" />\n      </Row>\n      <Row>\n        <Input\n          {...register('visina_kazne')}\n          label=\"VISINA KAZNE:\"\n          type={'number'}\n          inputMode={'decimal'}\n          leftContent={<div>€</div>}\n        />\n        <Input\n          {...register('dvije_trecine_kazne')}\n          label=\"2/3 KAZNE:\"\n          type={'number'}\n          inputMode={'decimal'}\n          leftContent={<div>€</div>}\n        />\n      </Row>\n      <Row>\n        <Input {...register('poziv_na_broj_odobrenja')} label=\"POZIV NA BROJ ODOBRENJA:\" />\n        <Input {...register('poziv_na_broj_zaduzenja')} label=\"POZIV NA BROJ ZADUŽENJA:\" />\n      </Row>\n      <Row>\n        <Controller\n          name=\"konto\"\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Dropdown\n              name={name}\n              value={value}\n              onChange={onChange}\n              label=\"KONTO:\"\n              placeholder={'Odaberite KONTO'}\n              options={mockDropdownOptions}\n            />\n          )}\n        />\n        <Input {...register('opis_konta')} label=\"OPIS KONTA:\" />\n      </Row>\n      <Row>\n        <Controller\n          name={'datum_izvrsnosti'}\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Datepicker\n              name={name}\n              selected={value ? new Date(value) : ''}\n              label=\"DATUM IZVRŠOSTI:\"\n              onChange={onChange}\n            />\n          )}\n        />{' '}\n        <Controller\n          name={'rok_za_placanje'}\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Datepicker\n              name={name}\n              selected={value ? new Date(value) : ''}\n              label=\"ROK ZA PLAĆANJE UKUPNE KAZNE:\"\n              onChange={onChange}\n            />\n          )}\n        />\n      </Row>\n      <Row>\n        <Input {...register('opis')} label=\"Opis:\" textarea />\n      </Row>\n      <Amount>\n        <Typography style={{fontWeight: 600, marginBottom: 10}} variant={'bodySmall'} content={'Platiti do:'} />\n        <Typography variant=\"bodySmall\" content=\"100 €\" />\n      </Amount>\n      <LabeledDivider>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"DETALJI PLAĆANJA:\" />\n      </LabeledDivider>\n      <Table tableHeads={tableHeadsAddFines} data={[]} />\n      <Amount>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"UKUPNO:\" />\n        <Typography variant=\"bodySmall\" content=\"100 €\" />\n      </Amount>\n      <Amount>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"PREMAŠEN IZNOS:\" />\n        <Typography variant=\"bodySmall\" content=\"100 €\" />\n      </Amount>\n      <LabeledDivider>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"PREGLED PLAĆANJA:\" />\n      </LabeledDivider>\n      <Amount>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"IZREČENA KAZNA:\" />\n        <Typography variant=\"bodySmall\" content=\"100 €\" />\n      </Amount>\n      <Amount>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"UPLAĆENA KAZNA:\" />\n        <Typography variant=\"bodySmall\" content=\"100 €\" />\n      </Amount>\n      <Amount>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"IZREČENI SUDSKI TROŠKOVI:\" />\n        <Typography variant=\"bodySmall\" content=\"100 €\" />\n      </Amount>\n      <Amount>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"UMANJENJE KAZNE:\" />\n        <Typography variant=\"bodySmall\" content=\"100 €\" />\n      </Amount>\n      <Amount>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"UPLAĆENI SUDSKI TROŠKOVI:\" />\n        <Typography variant=\"bodySmall\" content=\"100 €\" />\n      </Amount>\n      <Footer>\n        <Button content=\"Odustani\" variant=\"secondary\" style={{width: 130}} onClick={() => reset()} />\n        <Button content=\"Sačuvaj\" variant=\"primary\" onClick={handleSubmit(onSubmit)} />\n      </Footer>\n    </FinesFormContainer>\n  );\n};\n\nexport default AddFlatRate;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/flatRate/addFlatRate/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/flatRate/constants.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/flatRate/flatRate.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/flatRate/flatRateOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/flatRate/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/landingPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/proceduralCosts/addProceduralCosts/addProceduralCosts.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":29,"column":27,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":29,"endColumn":30,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[972,975],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[972,975],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {Controller, useForm} from 'react-hook-form';\nimport {FinesFormContainer, Row, Amount, LabeledDivider} from './styles.ts';\nimport {mockDropdownOptions} from '../../../../constants.ts';\nimport {Dropdown, Datepicker, Input, Button, Typography, Table} from 'client-library';\nimport {useEffect} from 'react';\nimport Footer from '../../../../shared/footer.ts';\nimport {tableHeadsAddFines} from '../constants.ts';\n\nconst initialValues = {\n  vrsta_akta: null,\n  potkategorija_akta: null,\n  broj_resenja: null,\n  datum_rjesenja: null,\n  subjekat: null,\n  jmbg: null,\n  prebivaliste: null,\n  visina_kazne: 0,\n  dvije_trecine_kazne: 0,\n  poziv_na_broj_odobrenja: null,\n  poziv_na_broj_zaduzenja: null,\n  konto: null,\n  opis_konta: null,\n  datum_izvrsnosti: null,\n  rok_za_placanje: null,\n  opis: null,\n};\nconst AddProceduralCosts = () => {\n  const {control, register, handleSubmit, reset, watch, setValue} = useForm({defaultValues: initialValues});\n  const onSubmit = (data: any) => {\n    // TODO add submit api call\n    console.log(data);\n  };\n\n  const visina_kazne = watch('visina_kazne');\n\n  useEffect(() => {\n    if (!visina_kazne) return;\n    setValue('dvije_trecine_kazne', Math.ceil((visina_kazne * 2) / 3));\n  }, [visina_kazne]);\n\n  return (\n    <FinesFormContainer>\n      <Row>\n        <Controller\n          name=\"vrsta_akta\"\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Dropdown\n              name={name}\n              value={value}\n              onChange={onChange}\n              label=\"VRSTA AKTA:\"\n              placeholder={'Odaberite vrstu akta'}\n              options={mockDropdownOptions}\n            />\n          )}\n        />\n        <Controller\n          name=\"potkategorija_akta\"\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Dropdown\n              name={name}\n              value={value}\n              onChange={onChange}\n              label=\"POTKATEGORIJA AKTA:\"\n              placeholder={'Odaberite potkategoriju akta'}\n              options={mockDropdownOptions}\n            />\n          )}\n        />\n      </Row>\n      <Row>\n        <Input\n          {...register('broj_resenja')}\n          label=\"BROJ RJEŠENJA / PRESUDE:\"\n          type={'number'}\n          inputMode={'decimal'}\n          leftContent={<div>€</div>}\n        />\n        <Controller\n          name={'datum_rjesenja'}\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Datepicker\n              name={name}\n              selected={value ? new Date(value) : ''}\n              label=\"DATUM RJEŠENJA:\"\n              onChange={onChange}\n            />\n          )}\n        />\n      </Row>\n      <Row>\n        <Input {...register('subjekat')} label=\"Subjekat:\" />\n      </Row>\n      <Row>\n        <Input {...register('jmbg')} label=\"JMBG:\" />\n        <Input {...register('prebivaliste')} label=\"PREBIVALIŠTE:\" />\n      </Row>\n      <Row>\n        <Input\n          {...register('visina_kazne')}\n          label=\"VISINA KAZNE:\"\n          type={'number'}\n          inputMode={'decimal'}\n          leftContent={<div>€</div>}\n        />\n        <Input\n          {...register('dvije_trecine_kazne')}\n          label=\"2/3 KAZNE:\"\n          type={'number'}\n          inputMode={'decimal'}\n          leftContent={<div>€</div>}\n        />\n      </Row>\n      <Row>\n        <Input {...register('poziv_na_broj_odobrenja')} label=\"POZIV NA BROJ ODOBRENJA:\" />\n        <Input {...register('poziv_na_broj_zaduzenja')} label=\"POZIV NA BROJ ZADUŽENJA:\" />\n      </Row>\n      <Row>\n        <Controller\n          name=\"konto\"\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Dropdown\n              name={name}\n              value={value}\n              onChange={onChange}\n              label=\"KONTO:\"\n              placeholder={'Odaberite KONTO'}\n              options={mockDropdownOptions}\n            />\n          )}\n        />\n        <Input {...register('opis_konta')} label=\"OPIS KONTA:\" />\n      </Row>\n      <Row>\n        <Controller\n          name={'datum_izvrsnosti'}\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Datepicker\n              name={name}\n              selected={value ? new Date(value) : ''}\n              label=\"DATUM IZVRŠOSTI:\"\n              onChange={onChange}\n            />\n          )}\n        />{' '}\n        <Controller\n          name={'rok_za_placanje'}\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Datepicker\n              name={name}\n              selected={value ? new Date(value) : ''}\n              label=\"ROK ZA PLAĆANJE UKUPNE KAZNE:\"\n              onChange={onChange}\n            />\n          )}\n        />\n      </Row>\n      <Row>\n        <Input {...register('opis')} label=\"Opis:\" textarea />\n      </Row>\n      <Amount>\n        <Typography style={{fontWeight: 600, marginBottom: 10}} variant={'bodySmall'} content={'Platiti do:'} />\n        <Typography variant=\"bodySmall\" content=\"100 €\" />\n      </Amount>\n      <LabeledDivider>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"DETALJI PLAĆANJA:\" />\n      </LabeledDivider>\n      <Table tableHeads={tableHeadsAddFines} data={[]} />\n      <Amount>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"UKUPNO:\" />\n        <Typography variant=\"bodySmall\" content=\"100 €\" />\n      </Amount>\n      <Amount>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"PREMAŠEN IZNOS:\" />\n        <Typography variant=\"bodySmall\" content=\"100 €\" />\n      </Amount>\n      <LabeledDivider>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"PREGLED PLAĆANJA:\" />\n      </LabeledDivider>\n      <Amount>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"IZREČENA KAZNA:\" />\n        <Typography variant=\"bodySmall\" content=\"100 €\" />\n      </Amount>\n      <Amount>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"UPLAĆENA KAZNA:\" />\n        <Typography variant=\"bodySmall\" content=\"100 €\" />\n      </Amount>\n      <Amount>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"IZREČENI SUDSKI TROŠKOVI:\" />\n        <Typography variant=\"bodySmall\" content=\"100 €\" />\n      </Amount>\n      <Amount>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"UMANJENJE KAZNE:\" />\n        <Typography variant=\"bodySmall\" content=\"100 €\" />\n      </Amount>\n      <Amount>\n        <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"UPLAĆENI SUDSKI TROŠKOVI:\" />\n        <Typography variant=\"bodySmall\" content=\"100 €\" />\n      </Amount>\n      <Footer>\n        <Button content=\"Odustani\" variant=\"secondary\" style={{width: 130}} onClick={() => reset()} />\n        <Button content=\"Sačuvaj\" variant=\"primary\" onClick={handleSubmit(onSubmit)} />\n      </Footer>\n    </FinesFormContainer>\n  );\n};\n\nexport default AddProceduralCosts;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/proceduralCosts/addProceduralCosts/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/proceduralCosts/constants.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/proceduralCosts/proceduralCosts.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/proceduralCosts/proceduralCostsOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/proceduralCosts/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/taxes/addTaxes/addTaxes.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":24,"column":27,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":24,"endColumn":30,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[745,748],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[745,748],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {Controller, useForm} from 'react-hook-form';\nimport {FinesFormContainer, Row} from './styles.ts';\nimport {mockDropdownOptions} from '../../../../constants.ts';\nimport {Dropdown, Datepicker, Input, Button} from 'client-library';\nimport Footer from '../../../../shared/footer.ts';\n\nconst initialValues = {\n  vrsta_takse: null,\n  potkategorija_akta: null,\n  broj_resenja: null,\n  datum_rjesenja: null,\n  subjekat: null,\n  jmbg: null,\n  visina_takse: 0,\n  poziv_na_broj_odobrenja: null,\n  poziv_na_broj_zaduzenja: null,\n  datum_izvrsnosti: null,\n  konto: null,\n  opis_konta: null,\n  opis: null,\n};\nconst AddTaxes = () => {\n  const {control, register, handleSubmit, reset} = useForm({defaultValues: initialValues});\n  const onSubmit = (data: any) => {\n    // TODO add submit api call\n    console.log(data);\n  };\n\n  return (\n    <FinesFormContainer>\n      <Row>\n        <Controller\n          name=\"vrsta_takse\"\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Dropdown\n              name={name}\n              value={value}\n              onChange={onChange}\n              label=\"VRSTA TAKSE:\"\n              placeholder={'Odaberite vrstu takse'}\n              options={mockDropdownOptions}\n            />\n          )}\n        />\n        <Controller\n          name=\"potkategorija_akta\"\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Dropdown\n              name={name}\n              value={value}\n              onChange={onChange}\n              label=\"POTKATEGORIJA AKTA:\"\n              placeholder={'Odaberite potkategoriju akta'}\n              options={mockDropdownOptions}\n            />\n          )}\n        />\n      </Row>\n      <Row>\n        <Input {...register('broj_resenja')} label=\"BROJ RJEŠENJA / PRESUDE:\" />\n        <Controller\n          name={'datum_rjesenja'}\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Datepicker\n              name={name}\n              selected={value ? new Date(value) : ''}\n              label=\"DATUM RJEŠENJA:\"\n              onChange={onChange}\n            />\n          )}\n        />\n      </Row>\n      <Row>\n        <Input {...register('subjekat')} label=\"SUBJEKAT:\" />\n        <Input {...register('jmbg')} label=\"JMBG:\" />\n      </Row>\n      <Row>\n        <Input {...register('visina_takse')} label=\"VISINA KAZNE:\" type={'number'} />\n        <Input {...register('poziv_na_broj_odobrenja')} label=\"POZIV NA BROJ ODOBRENJA:\" />\n      </Row>\n      <Row>\n        <Input {...register('poziv_na_broj_zaduzenja')} label=\"POZIV NA BROJ ZADUŽENJA:\" />\n        <Controller\n          name={'datum_izvrsnosti'}\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Datepicker\n              name={name}\n              selected={value ? new Date(value) : ''}\n              label=\"DATUM IZVRŠOSTI:\"\n              onChange={onChange}\n            />\n          )}\n        />\n      </Row>\n      <Row>\n        <Controller\n          name=\"konto\"\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <Dropdown\n              name={name}\n              value={value}\n              onChange={onChange}\n              label=\"KONTO:\"\n              placeholder={'Odaberite konto'}\n              options={mockDropdownOptions}\n            />\n          )}\n        />\n        <Input {...register('opis_konta')} label=\"OPIS KONTA:\" />\n      </Row>\n      <Row>\n        <Input {...register('opis')} label=\"Opis:\" textarea />\n      </Row>\n      <Footer>\n        <Button content=\"Odustani\" variant=\"secondary\" style={{width: 130}} onClick={() => reset()} />\n        <Button content=\"Sačuvaj\" variant=\"primary\" onClick={handleSubmit(onSubmit)} />\n      </Footer>\n    </FinesFormContainer>\n  );\n};\n\nexport default AddTaxes;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/taxes/addTaxes/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/taxes/constants.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/taxes/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/taxes/taxes.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/finesAndTaxes/taxes/taxesOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/landingPage/landingPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/landingPage/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/contracts/constants.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/contracts/contracts.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/contracts/contractsEntry/contractsEntry.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":28,"column":27,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":28,"endColumn":30,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[891,894],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[891,894],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {ContractsFormContainer, HalfWidthContainer, Row} from './styles.ts';\nimport Footer from '../../../../shared/footer.ts';\nimport {Dropdown, Datepicker, Input, Button} from 'client-library';\nimport {mockDropdownOptions} from '../../../../constants.ts';\nimport {Controller, useForm} from 'react-hook-form';\n\nconst initialValues = {\n  subject: null,\n  djelovodni_broj: null,\n  vrsta_ugovora: null,\n  sifarnik_poreske_uprave: null,\n  subjekt_koji_je_izdao_rjesenje: null,\n  aktivnost: null,\n  trajanje_ugovora: null,\n  datum_ugovora: null,\n  datum_valute: null,\n  datum_prijema_racunovodstva: null,\n  datum_prijema_racunovodstva_sss: null,\n  opis: '',\n  iznos_za_uplatu: null,\n  prethodna_primanja_u_mjesecu: null,\n  neto_iznos: null,\n};\n\nconst ContractsEntry = () => {\n  const {control, register, handleSubmit, reset} = useForm({defaultValues: initialValues});\n\n  const onSubmit = (data: any) => {\n    // TODO add sumbit api call\n    console.log(data);\n  };\n\n  return (\n    <ContractsFormContainer>\n      <>\n        <Row>\n          <Controller\n            name=\"subject\"\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"SUBJEKT:\"\n                placeholder={'Odaberite ime subjekta'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n          <Controller\n            name=\"djelovodni_broj\"\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"DJELOVODNI BROJ:\"\n                placeholder={'Odaberite djelovodni broj'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Controller\n            name={'vrsta_ugovora'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"VRSTA UGOVORA:\"\n                placeholder={'Odaberite vrstu ugovora'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n\n          <Controller\n            name={'sifarnik_poreske_uprave'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"ŠIFARNIK PORESKE UPRAVE:\"\n                placeholder={'Odaberite šifarnik'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Controller\n            name={'subjekt_koji_je_izdao_rjesenje'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label={'SUBJEKT KOJI JE IZDAO RJESENJE:'}\n                placeholder={'Odaberite subjekt'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Controller\n            name={'aktivnost'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"AKTIVNOST:\"\n                placeholder={'Odaberite aktivnost'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n          <Controller\n            name={'trajanje_ugovora'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"TRAJANJE UGOVORA:\"\n                placeholder={'Odaberite trajanje ugovora'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Controller\n            name={'datum_ugovora'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Datepicker\n                name={name}\n                selected={value ? new Date(value) : ''}\n                label=\"DATUM UGOVORA:\"\n                onChange={onChange}\n              />\n            )}\n          />\n          <Controller\n            name={'datum_valute'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Datepicker\n                name={name}\n                selected={value ? new Date(value) : ''}\n                label=\"DATUM VALUTE:\"\n                onChange={onChange}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Controller\n            name={'datum_prijema_racunovodstva'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Datepicker\n                name={name}\n                selected={value ? new Date(value) : ''}\n                label=\"DATUM PRIJEMA RAČUNOVODSTVA:\"\n                onChange={onChange}\n              />\n            )}\n          />\n          <Controller\n            name={'datum_prijema_racunovodstva_sss'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Datepicker\n                name={name}\n                selected={value ? new Date(value) : ''}\n                label=\"DATUM PRIJEMA RAČUNOVODSTVA SSS:\"\n                onChange={onChange}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Input {...register('opis')} label=\"OPIS:\" textarea placeholder=\"Unesite opis\" />\n        </Row>\n        <HalfWidthContainer>\n          <Row>\n            <Input\n              {...register('iznos_za_uplatu')}\n              label=\"IZNOS ZA UPLATU:\"\n              placeholder=\"Unesite iznos\"\n              type={'number'}\n              inputMode={'decimal'}\n              leftContent={<div>€</div>}\n            />\n            <Input\n              {...register('prethodna_primanja_u_mjesecu')}\n              label=\"PRETHODNA PRIMANJA U MJESECU:\"\n              placeholder=\"Unesite prethodna primanja\"\n              type={'number'}\n              inputMode={'decimal'}\n              leftContent={<div>€</div>}\n            />\n          </Row>\n          <HalfWidthContainer>\n            <Row>\n              <Input\n                {...register('neto_iznos')}\n                label={'NETO IZNOS:'}\n                placeholder={'Unesite neto iznos'}\n                type={'number'}\n                inputMode={'decimal'}\n                leftContent={<div>€</div>}\n              />\n            </Row>\n          </HalfWidthContainer>\n          <Button content=\"Obračunaj\" variant={'primary'} onClick={handleSubmit(onSubmit)} />\n        </HalfWidthContainer>\n        <Footer>\n          <Button content=\"Obriši\" variant=\"secondary\" onClick={() => reset()} />\n        </Footer>\n      </>\n    </ContractsFormContainer>\n  );\n};\n\nexport default ContractsEntry;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/contracts/contractsEntry/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/contracts/contractsOverview/contractsOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/contracts/contractsOverview/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/decisions/constants.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/decisions/decisions.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/decisions/decisionsEntry/decisionsEntry.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":28,"column":27,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":28,"endColumn":30,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[883,886],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[883,886],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {DecisionsFormContainer, HalfWidthContainer, Row} from './styles.ts';\nimport {Dropdown, Datepicker, Input, Button} from 'client-library';\nimport Footer from '../../../../shared/footer.ts';\nimport {Controller, useForm} from 'react-hook-form';\nimport {mockDropdownOptions} from '../../../../constants.ts';\n\nconst initialValues = {\n  subject: null,\n  broj_predmeta: null,\n  vrsta_rjesenja: null,\n  sifarnik_poreske_uprave: null,\n  subjekt_koji_je_izdao_rjesenje: null,\n  aktivnost: null,\n  izvor_finansiranja: null,\n  datum_rjesenja: null,\n  datum_valute: null,\n  datum_prijema_rjesenja: null,\n  datum_prijema_rjesenja_sss: null,\n  opis: '',\n  iznos_za_uplatu: null,\n  prethodna_primanja_u_mjesecu: null,\n  neto_iznos: null,\n};\n\nconst DecisionsEntry = () => {\n  const {control, register, handleSubmit, reset} = useForm({defaultValues: initialValues});\n\n  const onSubmit = (data: any) => {\n    // TODO add sumbit api call\n    console.log(data);\n  };\n\n  return (\n    <DecisionsFormContainer>\n      <>\n        <Row>\n          <Controller\n            name=\"subject\"\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"SUBJEKT:\"\n                placeholder={'Odaberite ime subjekta'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n          <Controller\n            name=\"broj_predmeta\"\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"BROJ PREDMETA:\"\n                placeholder={'Odaberite broj predmeta'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Controller\n            name={'vrsta_rjesenja'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"VRSTA RJEŠENJA:\"\n                placeholder={'Odaberite vrstu rešenja'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n          <Controller\n            name={'sifarnik_poreske_uprave'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"ŠIFARNIK PORESKE UPRAVE:\"\n                placeholder={'Odaberite šifarnik'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Controller\n            name={'subjekt_koji_je_izdao_rjesenje'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label={'SUBJEKT KOJI JE IZDAO RJEŠENJE:'}\n                placeholder={'Odaberite subjekt'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Controller\n            name={'aktivnost'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"AKTIVNOST:\"\n                placeholder={'Odaberite aktivnost'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n          <Controller\n            name={'izvor_finansiranja'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"IZVOR FINANSIRANJA:\"\n                placeholder={'Odaberite izvor finansiranja'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Controller\n            name={'datum_rjesenja'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Datepicker\n                name={name}\n                selected={value ? new Date(value) : ''}\n                label=\"DATUM RJEŠENJA:\"\n                onChange={onChange}\n              />\n            )}\n          />\n          <Controller\n            name={'datum_valute'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Datepicker\n                name={name}\n                selected={value ? new Date(value) : ''}\n                label=\"DATUM VALUTE:\"\n                onChange={onChange}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Controller\n            name={'datum_prijema_rjesenja'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Datepicker\n                name={name}\n                selected={value ? new Date(value) : ''}\n                label=\"DATUM PRIJEMA RJEŠENJA:\"\n                onChange={onChange}\n              />\n            )}\n          />\n          <Controller\n            name={'datum_prijema_rjesenja_sss'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Datepicker\n                name={name}\n                selected={value ? new Date(value) : ''}\n                label=\"DATUM PRIJEMA RJEŠENJA SSS:\"\n                onChange={onChange}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Input {...register('opis')} label=\"OPIS:\" textarea placeholder=\"Unesite opis\" />\n        </Row>\n        <HalfWidthContainer>\n          <Row>\n            <Input\n              {...register('iznos_za_uplatu')}\n              label=\"IZNOS ZA UPLATU:\"\n              placeholder=\"Unesite iznos\"\n              type={'number'}\n              inputMode={'decimal'}\n              leftContent={<div>€</div>}\n            />\n            <Input\n              {...register('prethodna_primanja_u_mjesecu')}\n              label=\"PRETHODNA PRIMANJA U MJESECU:\"\n              placeholder=\"Unesite prethodna primanja\"\n              type={'number'}\n              inputMode={'decimal'}\n              leftContent={<div>€</div>}\n            />\n          </Row>\n          <HalfWidthContainer>\n            <Row>\n              <Input\n                {...register('neto_iznos')}\n                label={'NETO IZNOS:'}\n                placeholder={'Unesite neto iznos'}\n                type={'number'}\n                inputMode={'decimal'}\n                leftContent={<div>€</div>}\n              />\n            </Row>\n          </HalfWidthContainer>\n          <Button content=\"Obračunaj\" variant={'primary'} onClick={handleSubmit(onSubmit)} />\n        </HalfWidthContainer>\n        <Footer>\n          <Button content=\"Obriši\" variant=\"secondary\" onClick={() => reset()} />\n        </Footer>\n      </>\n    </DecisionsFormContainer>\n  );\n};\n\nexport default DecisionsEntry;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/decisions/decisionsEntry/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/decisions/decisionsOverview/decisionsOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/decisions/decisionsOverview/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/invoices/constants.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/invoices/invoiceEntry/InvoiceEntry.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":90,"column":27,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":90,"endColumn":30,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3299,3302],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3299,3302],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-non-null-assertion","severity":1,"message":"Forbidden non-null assertion.","line":101,"column":29,"nodeType":"TSNonNullExpression","messageId":"noNonNull","endLine":101,"endColumn":87}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {yupResolver} from '@hookform/resolvers/yup';\nimport {Button, Datepicker, Dropdown, FileUpload, Input, Table, TableHead, Typography} from 'client-library';\nimport {useEffect, useMemo} from 'react';\nimport {Controller, useFieldArray, useForm} from 'react-hook-form';\nimport * as yup from 'yup';\nimport useGetCountOverview from '../../../../services/graphQL/counts/useGetCountOverview.ts';\nimport useGetOrderList from '../../../../services/graphQL/orders/useGetOrders.ts';\nimport useGetSuppliers from '../../../../services/graphQL/suppliers/useGetSuppliers.ts';\nimport {FileUploadWrapper} from '../../../../shared/FileUploadWrapper.ts';\nimport {FlexColumn, FlexRow} from '../../../../shared/flex.ts';\nimport Footer from '../../../../shared/footer.ts';\nimport {invoiceAmountTableHeads} from '../constants';\nimport {Amount, InvoiceAmount, InvoiceEntryForm, Row} from './styles';\nimport {invoiceTypeOptions} from './types.ts';\n\nconst invoiceSchema = yup.object().shape({\n  id: yup.number().nullable(),\n  invoice_number: yup.string().required('Broj računa je obavezan.'),\n  supplier_id: yup\n    .object({\n      id: yup.number().required(),\n      title: yup.string().required(),\n      bank_accounts: yup.array().of(yup.string().required()).required(),\n    })\n    .required('Dobavljač je obavezan.'),\n  order_id: yup\n    .object({\n      id: yup.number().required(),\n      title: yup.string().required(),\n    })\n    .required('Narudžbenica je obavezna.'),\n  date_of_invoice: yup.date().required('Datum računa je obavezan.'),\n  receipt_date: yup.date().required('Datum prijema računa je obavezan.'),\n  sss_invoice_receipt_date: yup.date().required('Datum prijema računa SSS je obavezan.'),\n  bank_account: yup\n    .object({\n      id: yup.string().required(),\n      title: yup.string().required(),\n    })\n    .nullable()\n    .required('Žiro račun je obavezan.'),\n  date_of_payment: yup.date().required('Datum valute je obavezan.'),\n  description: yup.string(),\n  invoice_type: yup\n    .object()\n    .shape({\n      id: yup.string().required(),\n      title: yup.string().required(),\n    })\n    .required('Tip računa je obavezan.'),\n  file_id: yup.number().nullable(),\n  articles: yup.array().of(\n    yup.object().shape({\n      id: yup.number().required(),\n      title: yup.string().required(),\n      amount: yup.number().required(),\n      price: yup.number().required(),\n      total_price: yup.number().required(),\n      // * PDV is calculated from the price and total price\n      pdv: yup.number().required(),\n      description: yup.string().optional(),\n      account: yup\n        .object({\n          id: yup.number().required(),\n          title: yup.string().required(),\n        })\n        .required('Konto je obavezan.')\n        .nullable(),\n    }),\n  ),\n});\n\ntype InvoiceEntryForm = yup.InferType<typeof invoiceSchema>;\n\nconst InvoiceEntry = () => {\n  const {control, register, handleSubmit, reset, watch, setValue} = useForm<InvoiceEntryForm>({\n    resolver: yupResolver(invoiceSchema),\n  });\n\n  const {fields, append} = useFieldArray({name: 'articles', control});\n\n  const [selectedOrderOption, invoiceType, invoice_number, date_of_invoice, receipt_date] = watch([\n    'order_id',\n    'invoice_type',\n    'invoice_number',\n    'date_of_invoice',\n    'receipt_date',\n  ]);\n\n  const onSubmit = (data: any) => {\n    console.log(data);\n  };\n\n  const {suppliers} = useGetSuppliers({});\n  const {orders} = useGetOrderList({supplier_id: watch('supplier_id')?.id});\n  const {counts} = useGetCountOverview({});\n\n  useEffect(() => {\n    // * When order is selecred, invoice number, date of invoice, receipt date and articles are set from its values\n    if (selectedOrderOption) {\n      const selectedOrder = orders.find(order => order.id === selectedOrderOption.id)!;\n\n      if (selectedOrder.invoice_number) setValue('invoice_number', selectedOrder.invoice_number);\n      if (selectedOrder.invoice_date) setValue('date_of_invoice', new Date(selectedOrder.invoice_date));\n      if (selectedOrder.date_system) setValue('receipt_date', new Date(selectedOrder.date_system));\n\n      if (selectedOrder.articles && selectedOrder.articles.length) {\n        for (const article of selectedOrder.articles) {\n          append({\n            id: article.id,\n            title: article.title,\n            amount: article.amount,\n            price: article.price,\n            total_price: article.total_price,\n            pdv:\n              article.price && article.total_price ? (article.price / (article.total_price - article.price)) * 100 : 0,\n            description: article.description,\n            account: null,\n          });\n        }\n      }\n    }\n  }, [selectedOrderOption]);\n\n  const invoiceTableHeads: TableHead[] = useMemo(() => {\n    const isManual = invoiceType?.id === 'manual';\n\n    return [\n      {title: 'Naziv stavke', accessor: 'title'},\n      {\n        title: 'Neto iznos',\n        accessor: 'price',\n        type: 'custom',\n        renderContents: (price: number, row) => {\n          if (isManual) {\n            return <Input {...register(`articles.${row.id}.price`)} type=\"number\" />;\n          } else {\n            return <Typography content={price || '0'} />;\n          }\n        },\n      },\n      {\n        title: 'PDV',\n        accessor: 'pdv',\n        type: 'custom',\n        renderContents: (pdv: number, row) => {\n          if (isManual) {\n            return <Input {...register(`articles.${row.id}.pdv`)} type=\"number\" />;\n          } else {\n            return <Typography content={pdv || '0'} />;\n          }\n        },\n      },\n      {\n        title: 'Ukupan iznos',\n        accessor: 'total_price',\n        type: 'custom',\n        renderContents: (totalPrice: number, row) => {\n          if (isManual) {\n            return <Input {...register(`articles.${row.id}.total_price`)} type=\"number\" />;\n          } else {\n            return <Typography content={totalPrice || '0'} />;\n          }\n        },\n      },\n      {title: 'Opis', accessor: 'description'},\n      {\n        title: 'Konto',\n        accessor: 'account',\n        type: 'custom',\n        renderContents: (_, row) => (\n          <Controller\n            name={`articles.${row.id}.account`}\n            control={control}\n            render={({field: {onChange, name, value}}) => (\n              <Dropdown options={counts} name={name} value={value} onChange={onChange} />\n            )}\n          />\n        ),\n      },\n      {title: '', accessor: 'TABLE_ACTIONS', type: 'tableActions'},\n    ];\n  }, [selectedOrderOption, invoiceType]);\n\n  const totalNet = useMemo(() => fields.reduce((acc, field) => (acc += field.price), 0), [fields]);\n  const totalGross = useMemo(() => fields.reduce((acc, field) => (acc += field.total_price), 0), [fields]);\n\n  const supplierBankAccounts = suppliers.find(supplier => supplier.id === watch('supplier_id')?.id)?.bank_accounts;\n\n  return (\n    <InvoiceEntryForm>\n      <>\n        <Row>\n          <Controller\n            name=\"invoice_type\"\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"TIP RAČUNA:\"\n                placeholder={'Odaberite tip računa'}\n                options={invoiceTypeOptions}\n              />\n            )}\n          />\n          <Controller\n            name=\"supplier_id\"\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"DOBAVLJAČ:\"\n                placeholder={'Odaberite ime dobavljača'}\n                options={suppliers}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Controller\n            name=\"order_id\"\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"NARUDŽBENICA:\"\n                placeholder={'Odaberite narudžbenicu'}\n                options={orders.map(order => ({id: order.id, title: order.invoice_number}))}\n                isDisabled={invoiceType?.id === 'manual'}\n              />\n            )}\n          />\n          <Input\n            {...register('invoice_number')}\n            label=\"BROJ RAČUNA:\"\n            placeholder=\"Unesite broj računa\"\n            disabled={Boolean(selectedOrderOption) && Boolean(invoice_number)}\n          />\n        </Row>\n\n        {/* TODO: This date is being added by the accountant of SSS */}\n        {/* Flex row shared flex component is being tested here */}\n        <FlexRow gap=\"0.5rem\" justify=\"between\" style={{marginBottom: 25}} stretchChildren>\n          <Controller\n            name={'date_of_invoice'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Datepicker\n                name={name}\n                selected={value ? new Date(value) : ''}\n                label=\"DATUM RAČUNA:\"\n                onChange={onChange}\n                disabled={Boolean(selectedOrderOption) && date_of_invoice}\n              />\n            )}\n          />\n          <Controller\n            name={'receipt_date'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Datepicker\n                name={name}\n                selected={value ? new Date(value) : ''}\n                label=\"DATUM PRIJEMA ROBE:\"\n                onChange={onChange}\n                disabled={Boolean(selectedOrderOption) && receipt_date}\n              />\n            )}\n          />\n          <Controller\n            name={'sss_invoice_receipt_date'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Datepicker\n                name={name}\n                selected={value ? new Date(value) : ''}\n                label=\"DATUM PRIJEMA RAČUNA SSS:\"\n                onChange={onChange}\n              />\n            )}\n          />\n        </FlexRow>\n        <FileUploadWrapper>\n          <FileUpload\n            icon={<></>}\n            variant=\"secondary\"\n            onUpload={() => console.log('upload')}\n            note={<Typography variant=\"bodySmall\" content=\"Prilog dokumenta\" />}\n            buttonText=\"Učitaj fajl\"\n          />\n        </FileUploadWrapper>\n        <Row>\n          <Controller\n            name={'bank_account'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"ŽIRO RAČUN:\"\n                placeholder={'Odaberite broj računa'}\n                options={\n                  supplierBankAccounts\n                    ? supplierBankAccounts.map((account: string) => ({id: account, title: account}))\n                    : []\n                }\n              />\n            )}\n          />\n          <Controller\n            name={'date_of_payment'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Datepicker\n                name={name}\n                selected={value ? new Date(value) : ''}\n                label=\"DATUM VALUTE:\"\n                onChange={onChange}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Input {...register('description')} label=\"OPIS:\" textarea placeholder=\"Unesite opis\" />\n        </Row>\n\n        <Table tableHeads={invoiceTableHeads} data={fields} />\n\n        {selectedOrderOption && fields.length && (\n          <FlexColumn style={{marginTop: '1rem'}}>\n            <Amount>\n              <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"NETO IZNOS:\" />\n              <Typography variant=\"bodySmall\" content={`${totalNet}e`} />\n            </Amount>\n            <Amount>\n              <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"PDV:\" />\n              <Typography variant=\"bodySmall\" content={`${fields[0]?.pdv}e`} />\n            </Amount>\n            <Amount>\n              <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"UKUPAN IZNOS:\" />\n              <Typography variant=\"bodySmall\" content={`${totalGross}e`} />\n            </Amount>\n            <InvoiceAmount>\n              <Typography variant=\"bodySmall\" content=\"INVOICE AMOUNT BY KONTO\" />\n            </InvoiceAmount>\n          </FlexColumn>\n        )}\n\n        <Table tableHeads={invoiceAmountTableHeads} data={[]} />\n      </>\n      <Footer>\n        <Button content=\"Odustani\" variant=\"secondary\" style={{width: 130}} onClick={() => reset()} />\n        <Button content=\"Sačuvaj\" variant=\"primary\" onClick={handleSubmit(onSubmit)} />\n      </Footer>\n    </InvoiceEntryForm>\n  );\n};\n\nexport default InvoiceEntry;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/invoices/invoiceEntry/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/invoices/invoiceEntry/types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/invoices/invoices.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/invoices/invoicesOverview/invoicesOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/invoices/invoicesOverview/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/salaries/constants.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/salaries/salaries.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/salaries/salariesEntry/salariesEntry.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":17,"column":27,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":17,"endColumn":30,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[658,661],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[658,661],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {SalariesFormContainer, Row, FileUploadStepTitle} from './styles.ts';\nimport Footer from '../../../../shared/footer.ts';\nimport {Dropdown, Datepicker, Input, Button, FileUpload, Typography} from 'client-library';\nimport {FileUploadWrapper} from '../../../../shared/FileUploadWrapper.ts';\nimport {mockDropdownOptions} from '../../../../constants.ts';\nimport {Controller, useForm} from 'react-hook-form';\n\nconst initialValues = {\n  aktivnost: null,\n  mjesec: null,\n  datum_obracuna: null,\n  opis: '',\n};\nconst SalariesEntry = () => {\n  const {control, register, handleSubmit, reset} = useForm({defaultValues: initialValues});\n\n  const onSubmit = (data: any) => {\n    // TODO add sumbit api call\n    console.log(data);\n  };\n\n  return (\n    <SalariesFormContainer>\n      <>\n        <Row>\n          <Controller\n            name=\"aktivnost\"\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"AKTIVNOST\"\n                placeholder={'Odaberite aktivnost'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Controller\n            name={'mjesec'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"MJESEC:\"\n                placeholder={'Odaberite mjesec'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n          <Controller\n            name={'datum_obracuna'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Datepicker\n                name={name}\n                selected={value ? new Date(value) : ''}\n                label=\"DATUM OBRAČUNA:\"\n                onChange={onChange}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Input {...register('opis')} label=\"OPIS:\" textarea placeholder=\"Unesite opis\" />\n        </Row>\n        <Row>\n          <FileUploadStepTitle variant=\"bodyMedium\" content=\"STEP 1: UVEZI REKAPITULACIJU MJESEČNE ZARADE\" />\n        </Row>\n        <FileUploadWrapper>\n          <FileUpload\n            icon={<></>}\n            variant=\"secondary\"\n            onUpload={e => console.log(e)}\n            note={<Typography variant=\"bodySmall\" content=\"UVEZI REKAPITULACIJU MJESEČNE ZARADE\" />}\n            buttonText=\"UČITAJ FAJL\"\n          />\n        </FileUploadWrapper>\n        <Row>\n          <FileUploadStepTitle variant=\"bodyMedium\" content=\"STEP 2: UVEZI REKAPITULACIJU REKAPITULACIJU ZARADA\" />\n        </Row>\n        <FileUploadWrapper>\n          <FileUpload\n            icon={<></>}\n            variant=\"secondary\"\n            onUpload={e => console.log(e)}\n            note={<Typography variant=\"bodySmall\" content=\"UVEZI REKAPITULACIJU OBUSTAVA ZARADA\" />}\n            buttonText=\"UČITAJ FAJL\"\n          />\n        </FileUploadWrapper>\n        <Footer>\n          <Button content=\"Obriši\" variant=\"secondary\" onClick={() => reset()} />\n          <Button content=\"Nastavi\" variant=\"primary\" onClick={handleSubmit(onSubmit)} />\n        </Footer>\n      </>\n    </SalariesFormContainer>\n  );\n};\n\nexport default SalariesEntry;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/salaries/salariesEntry/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/salaries/salariesOverview/salariesOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/salaries/salariesOverview/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/constants.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/get-environment.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/getEnvironment.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/budgetContoUpdate/updateContoVersion.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/budgetContoUpdate/useUpdateControVersion.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/counts/getCountOverview.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/counts/useGetCountOverview.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/deleteBudget/deleteBudget.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/deleteBudget/useDeleteBudget.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/fines/deleteFine.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/fines/finesOverview.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/fines/insertFine.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/fines/useDeleteFine.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/fines/useGetFines.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/fines/useInsertFine.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/getBudgetDetails/getBudgetDetails.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/getBudgetDetails/useGetBudgetDetails.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/getBudgets/getBudgets.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/getBudgets/useGetBudgets.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/getFinancial/getFinancial.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/getFinancial/useGetFinancial.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/index.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":25,"column":38,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":25,"endColumn":41,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1112,1115],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1112,1115],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":25,"column":52,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":25,"endColumn":55,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1126,1129],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1126,1129],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {getEnvironment} from '../get-environment';\nimport getBudgets from './getBudgets/getBudgets';\nimport deleteBudget from './deleteBudget/deleteBudget';\nimport insertBudget from './insertBudget/insertBudget.ts';\nimport getCountOverview from './counts/getCountOverview.ts';\nimport getBudgetDetails from './getBudgetDetails/getBudgetDetails.ts';\nimport insertNonFinancial from './insertNonFinancial/insertNonFinancial.ts';\nimport goalsInsert from './insertNonFinancial/goals/insertGoals.ts';\nimport sendBudget from './sendBudget/sendBudget.ts';\nimport finesOverview from './fines/finesOverview.ts';\nimport insertFine from './fines/insertFine.ts';\nimport deletePayment from './payments/deletePayment.ts';\nimport getPayments from './payments/getPayments.ts';\nimport insertPayment from './payments/insertPayment.ts';\nimport deleteFine from './fines/deleteFine.ts';\n\nexport const BFF_URL = {\n  local: 'http://localhost:8080',\n  development: 'https://sss-erp-bff.oykos.me',\n  staging: 'http://localhost:8080',\n  production: 'http://localhost:8080',\n};\n\nexport const GraphQL = {\n  fetch: (query: string, variables?: any): Promise<any> => {\n    return fetch(BFF_URL[getEnvironment()], {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({query, variables}),\n    })\n      .then(response => response.json())\n      .catch(error => console.error(error));\n  },\n  getBudgets: getBudgets,\n  insertBudget: insertBudget,\n  deleteBudget: deleteBudget,\n  sendBudget: sendBudget,\n  getCountOverview: getCountOverview,\n  getBudgetDetails: getBudgetDetails,\n  insertNonFinancial: insertNonFinancial,\n  goalsInsert: goalsInsert,\n  finesOverview: finesOverview,\n  insertFine: insertFine,\n  deleteFine: deleteFine,\n  insertPayment: insertPayment,\n  deletePayment: deletePayment,\n  getPayments: getPayments,\n};\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/insertBudget/insertBudget.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/insertBudget/useInsertBudget.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/insertNonFinancial/goals/insertGoals.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/insertNonFinancial/goals/useInsertGoals.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":9,"column":36,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":9,"endColumn":39,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[290,293],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[290,293],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {useState} from 'react';\nimport useAppContext from '../../../../context/useAppContext.ts';\nimport {GraphQL} from '../../index.ts';\n\nconst useInsertGoals = () => {\n  const [loading, setLoading] = useState(false);\n  const {fetch} = useAppContext();\n\n  const insertGoals = async (data: any, onSuccess?: () => void, onError?: () => void) => {\n    setLoading(true);\n    const response = await fetch(GraphQL.goalsInsert, {data});\n    if (response.goalsNotFinancially_Insert.status === 'success') {\n      onSuccess && onSuccess();\n    } else {\n      onError && onError();\n    }\n  };\n\n  return {loading, insertGoals};\n};\n\nexport default useInsertGoals;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/insertNonFinancial/insertNonFinancial.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/insertNonFinancial/useInsertNonFinancial.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/orders/getOrders.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/orders/useGetOrders.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/organizationUnits/useGetOrganizationUnits.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/payments/deletePayment.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/payments/getPayments.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/payments/insertPayment.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/payments/useDeletePayment.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/payments/useGetPayments.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/payments/useInsertPayment.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/sendBudget/sendBudget.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/sendBudget/useSendBudget.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/suppliers/useGetSuppliers.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/setupTests.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/FileUploadWrapper.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/budgetTable/budgetTable.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/budgetTable/components/budgetTableRow.tsx","messages":[{"ruleId":"indent","severity":2,"message":"Expected indentation of 10 spaces but found 12.","line":243,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":243,"endColumn":13,"fix":{"range":[8263,8275],"text":"          "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 10.","line":244,"column":1,"nodeType":"Punctuator","messageId":"wrongIndentation","endLine":244,"endColumn":11,"fix":{"range":[8342,8352],"text":"        "}}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import {\n  Typography,\n  ChevronRightIcon,\n  Theme,\n  Dropdown,\n  ChevronDownIcon,\n  EditIconTwo,\n  Input,\n  Checkbox,\n} from 'client-library';\nimport {ReactNode, useState, useMemo} from 'react';\nimport {Count} from '../../../types/graphQL/counts';\nimport {months, sourceOptions} from '../constants';\nimport {BudgetText, CountTableCell, FlexContainer} from '../styles';\nimport {BudgetTableStep} from '../types';\nimport BudgetingForm from './budgetingForm';\nimport {useFormContext, Controller} from 'react-hook-form';\n\ntype BudgetTableRowProps = {\n  step: BudgetTableStep | `${BudgetTableStep}`;\n  count: Count;\n  level: number;\n  fieldPath: string[];\n  children: ReactNode;\n  updateParentValues: (fieldPath: string) => void;\n};\n\nconst BudgetTableRow = ({step, count, level, fieldPath, children, updateParentValues}: BudgetTableRowProps) => {\n  const {control} = useFormContext();\n\n  const [isCollapsed, setIsCollapsed] = useState(true);\n\n  const onCollapse = () => {\n    setIsCollapsed(!isCollapsed);\n  };\n\n  const content = useMemo(() => {\n    switch (step) {\n      case BudgetTableStep.CREATING:\n      case BudgetTableStep.AWAITING_APPROVAL:\n        return (\n          <>\n            <CountTableCell level={level}>\n              <BudgetText content=\"\" variant=\"bodySmall\" />\n            </CountTableCell>\n            <CountTableCell level={level}>\n              <Typography content=\"\" variant=\"bodySmall\" />\n            </CountTableCell>\n            <CountTableCell level={level}>\n              <BudgetText content=\"\" variant=\"bodySmall\" />\n            </CountTableCell>\n            <CountTableCell level={level}>\n              <BudgetText content=\"\" variant=\"bodySmall\" />\n            </CountTableCell>\n          </>\n        );\n      case BudgetTableStep.BUDGETING:\n      case BudgetTableStep.BUDGETING_ACTUAL:\n        return (\n          <BudgetingForm\n            updateParentValues={updateParentValues}\n            level={level}\n            lastLevel={!count.children?.length}\n            fieldPath={fieldPath}\n            actual={step === BudgetTableStep.BUDGETING_ACTUAL}\n          />\n        );\n      case BudgetTableStep.VIEW_ANNUAL:\n        return (\n          <>\n            <CountTableCell level={level}>\n              <BudgetText content=\"0.00\" variant=\"bodySmall\" />\n            </CountTableCell>\n            <CountTableCell level={level}>\n              <BudgetText content=\"0.00\" variant=\"bodySmall\" />\n            </CountTableCell>\n            <CountTableCell level={level}>\n              <BudgetText content=\"0.00\" variant=\"bodySmall\" />\n            </CountTableCell>\n          </>\n        );\n      case BudgetTableStep.VIEW_MONTHLY:\n        return (\n          <>\n            {months.map((value, index) => (\n              <CountTableCell level={level} key={`${value}-${index}`}>\n                <div style={{width: 50}}>\n                  <BudgetText content=\"0.00\" variant=\"bodySmall\" />\n                </div>\n              </CountTableCell>\n            ))}\n            <CountTableCell level={level}>\n              <BudgetText content=\"0.00\" variant=\"bodySmall\" />\n            </CountTableCell>\n          </>\n        );\n      case BudgetTableStep.REBALANCING:\n        return (\n          <>\n            <CountTableCell level={level}>\n              <BudgetText content=\"0.00\" variant=\"bodySmall\" />\n            </CountTableCell>\n            <CountTableCell level={level}>\n              <BudgetText content=\"0.00\" variant=\"bodySmall\" />\n            </CountTableCell>\n            <CountTableCell level={level}>\n              <BudgetText content=\"0.00\" variant=\"bodySmall\" />\n            </CountTableCell>\n            <CountTableCell level={level} rebalanceCol>\n              <BudgetText content=\"0.00\" variant=\"bodySmall\" />\n            </CountTableCell>\n            <CountTableCell level={level} rebalanceCol>\n              <BudgetText content=\"0.00\" variant=\"bodySmall\" />\n            </CountTableCell>\n          </>\n        );\n      case BudgetTableStep.CURRENT_BUDGET:\n        return (\n          <>\n            <CountTableCell level={level}>\n              <BudgetText content=\"\" variant=\"bodySmall\" />\n            </CountTableCell>\n            <CountTableCell level={level}>\n              <BudgetText content=\"\" variant=\"bodySmall\" />\n            </CountTableCell>\n          </>\n        );\n      case BudgetTableStep.VIEW_MONTHLY_WITH_EDIT:\n        return (\n          <>\n            {months.map((value, index) => (\n              <CountTableCell level={level} key={`${value}-${index}`}>\n                <div style={{width: 100}}>\n                  <Input />\n                  <BudgetText content=\"0.00\" variant=\"bodySmall\" style={{color: 'red'}} />\n                </div>\n              </CountTableCell>\n            ))}\n            <CountTableCell level={level}>\n              <BudgetText content=\"0.00\" variant=\"bodySmall\" />\n            </CountTableCell>\n            <CountTableCell level={level}>\n              <div style={{display: 'flex', justifyContent: 'center'}}>\n                {/*TO DO add logic for Edit, for now we do not have BE ready */}\n                <EditIconTwo />\n              </div>\n            </CountTableCell>\n          </>\n        );\n      case BudgetTableStep.INTERNAL_REALLOCATION:\n        return (\n          <>\n            <CountTableCell level={level}>\n              <BudgetText content=\"0.00\" variant=\"bodySmall\" />\n            </CountTableCell>\n            <CountTableCell level={level}>\n              <Input />\n            </CountTableCell>\n            <CountTableCell level={level}>\n              <Input />\n            </CountTableCell>\n          </>\n        );\n      case BudgetTableStep.REQUEST_FUND_RELEASE:\n        return (\n          <>\n            <CountTableCell level={level}>\n              <BudgetText content=\"0.00\" variant=\"bodySmall\" />\n            </CountTableCell>\n            <CountTableCell level={level}>\n              <Input />\n            </CountTableCell>\n            <CountTableCell level={level}>\n              <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n                {/* TO DO add logic for check, for now we do not have BE */}\n                <Checkbox name={''} onChange={undefined} checked={false} style={{marginLeft: '20px'}} />\n              </div>\n            </CountTableCell>\n          </>\n        );\n      default:\n        <></>;\n    }\n  }, [step, count, level]);\n\n  const sourceCellContent = useMemo(() => {\n    const lastLevel = !count.children?.length;\n\n    if (lastLevel) {\n      return step === BudgetTableStep.BUDGETING ? (\n        <Controller\n          control={control}\n          name={`${fieldPath.join('.')}-source`}\n          render={({field: {onChange, name, value}}) => (\n            <Dropdown\n              options={sourceOptions}\n              value={value}\n              name={name}\n              onChange={onChange}\n              placeholder=\"Izaberite izvor\"\n            />\n          )}\n        />\n      ) : (\n        <Typography content=\"\" variant=\"bodySmall\" />\n      );\n    }\n\n    return null;\n  }, [count, step, level]);\n\n  const generateChevronIcon = () => {\n    return isCollapsed ? (\n      <ChevronDownIcon stroke={Theme.palette.gray900} style={{marginRight: 10}} />\n    ) : (\n      <ChevronRightIcon stroke={Theme.palette.gray900} style={{marginRight: 10}} />\n    );\n  };\n\n  return (\n    <>\n      <tr>\n        <CountTableCell level={level} onClick={level === 1 ? onCollapse : undefined} first>\n          <FlexContainer>\n            {level === 1 && generateChevronIcon()}\n            <Typography\n              content={`${count.serial_number} - ${count.title}`}\n              variant=\"bodySmall\"\n              style={{\n                marginLeft: level !== 1 ? 26 : 0,\n                fontWeight: level < 4 ? 600 : 400,\n                padding: `12px ${(level - 1) * 7}`,\n              }}\n            />\n          </FlexContainer>\n        </CountTableCell>\n\n        {/* TO DO  When all the templates are finished, check which ones require this and write the condition more nicely */}\n        {step !== BudgetTableStep.VIEW_MONTHLY &&\n          step !== BudgetTableStep.VIEW_MONTHLY_WITH_EDIT &&\n          step !== BudgetTableStep.INTERNAL_REALLOCATION &&\n          step !== BudgetTableStep.REQUEST_FUND_RELEASE && (\n            <CountTableCell level={level}>{sourceCellContent}</CountTableCell>\n          )}\n\n        {content}\n      </tr>\n\n      {isCollapsed && children}\n    </>\n  );\n};\n\nexport default BudgetTableRow;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/budgetTable/components/budgetingForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/budgetTable/constants.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/budgetTable/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/budgetTable/types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/confirmationModal/confirmationModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/confirmationModal/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/confirmationModal/types.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":3,"column":22,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":3,"endColumn":25,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[68,71],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[68,71],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":4,"column":24,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":4,"endColumn":27,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[105,108],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[105,108],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":5,"column":19,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":5,"endColumn":22,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[137,140],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[137,140],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export interface ModalProps {\n  open: boolean;\n  onClose: (action?: any) => void;\n  onConfirm: (action?: any) => void;\n  customContent?: any;\n  subTitle?: string;\n}\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/deleteModal/deleteModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/deleteModal/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/deleteModal/types.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":3,"column":22,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":3,"endColumn":25,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[74,77],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[74,77],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":4,"column":27,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":4,"endColumn":30,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[114,117],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[114,117],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":5,"column":19,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":5,"endColumn":22,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[146,149],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[146,149],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export interface DeleteModalProps {\n  open: boolean;\n  onClose: (action?: any) => void;\n  handleDelete: (action?: any) => void;\n  customContent?: any;\n}\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/flex.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/footer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/plusButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/screenWrapper/screenWrapper.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":43,"column":56,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":43,"endColumn":59,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1092,1095],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1092,1095],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, {FC, ReactElement, ReactNode} from 'react';\nimport {Breadcrumbs} from 'client-library';\nimport styled from 'styled-components';\nimport useAppContext from '../../context/useAppContext';\n\nconst Container = styled.div`\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: #f8f8f8;\n  padding: 28px 40px;\n  height: calc(100vh - 157px);\n  overflow-y: auto;\n  box-sizing: border-box;\n\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n`;\n\nconst StyledBreadcrumbs = styled(Breadcrumbs)`\n  padding: 0;\n  margin: 0;\n`;\n\nconst ScreenWrapper: FC<{children: ReactNode; showBreadcrumbs?: boolean}> = ({children, showBreadcrumbs = true}) => {\n  const {\n    breadcrumbs,\n    navigation: {navigate},\n  } = useAppContext();\n\n  const breadcrumbItems = breadcrumbs?.get();\n\n  const handleNavigation = (\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent> | undefined,\n    item?: {\n      name: string;\n      to: string;\n      icon?: ReactElement;\n    },\n  ) => {\n    e?.preventDefault();\n    const newBreacrumbs = [...breadcrumbItems];\n    const index = newBreacrumbs.findIndex((breadcrumb: any) => breadcrumb.name === item?.name);\n    newBreacrumbs.splice(index + 1, newBreacrumbs.length - index);\n    breadcrumbs.set(newBreacrumbs);\n    navigate(item?.to);\n  };\n\n  return (\n    <Container>\n      {showBreadcrumbs ? <StyledBreadcrumbs items={breadcrumbItems} onClick={handleNavigation} /> : null}\n      {children}\n    </Container>\n  );\n};\n\nexport default ScreenWrapper;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/screenWrapper/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/sectionBox.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/statusTableCell/statusTableCell.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/statusTableCell/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/styledTabsWithTitle/styledTabsWithTitle.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/styledTabsWithTitle/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/dropdownData.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/environment.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/fileUploadType.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/graphQL/budget.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/graphQL/budgetDetails.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/graphQL/budgetFinancial.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/graphQL/budgetInsert.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/graphQL/budgetOverview.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/graphQL/counts.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/graphQL/fineForm.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/graphQL/finePaymentForm.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/graphQL/finesOverview.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/graphQL/nonFinancial.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/graphQL/orders.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/graphQL/organizationUnits.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":19,"column":14,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":19,"endColumn":17,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[357,360],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[357,360],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export interface GetResponse<T> {\n  status: string;\n  message: string;\n  total?: number;\n  items: T[];\n}\n\nexport interface OrganizationUnit {\n  id: number;\n  parent_id: number;\n  number_of_judges: number;\n  title: string;\n  abbreviation: string;\n  description?: string;\n  address?: string;\n  color: string;\n  folder_id: number;\n  icon: string;\n  children?: any;\n}\n\nexport type GetOrganizationUnitsParams = {\n  page?: number;\n  size?: number;\n  search?: string;\n};\n\nexport type GetOrganizationUnitsOptions = {\n  allOption?: boolean;\n};\n\nexport type OrganizationUnitsResponse = {\n  get: {\n    organizationUnits: GetResponse<OrganizationUnit>;\n  };\n};\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/graphQL/response.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":53,"column":50,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":53,"endColumn":53,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1112,1115],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1112,1115],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":81,"column":39,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":81,"endColumn":42,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1619,1622],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1619,1622],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":84,"column":40,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":84,"endColumn":43,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1681,1684],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1681,1684],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {BudgetOverviewItem} from './budgetOverview';\nimport {BudgetOverviewInsert} from './budgetInsert';\nimport {BudgetDetailsItem} from './budgetDetails';\nimport {NonFinancialGoal} from './nonFinancial.ts';\nimport {FinesOverviewItem} from './finesOverview.ts';\n\nexport interface GetResponse<T> {\n  status: string;\n  message: string;\n  total?: number;\n  items: T[];\n}\n\nexport interface InsertResponse<T> {\n  status: string;\n  message: string;\n  item: T;\n}\n\nexport type SimpleResponse = {\n  status: string;\n  message: string;\n};\n\nexport type DetailsResponse<T> = {\n  status: string;\n  message: string;\n  item: T | null;\n};\n\nexport type BudgetResponse = {\n  get: {\n    budget_Overview: GetResponse<BudgetOverviewItem>;\n  };\n  insert: {\n    budget_Insert: InsertResponse<BudgetOverviewInsert>;\n  };\n  delete: {\n    budget_Delete: SimpleResponse;\n  };\n  send: {\n    budget_Send: SimpleResponse;\n  };\n  details: {\n    budget_Details: GetResponse<BudgetDetailsItem>;\n  };\n};\n\nexport type NonFinancialResponse = {\n  // get: {};\n  insert: {\n    // TODO add correct type\n    requestNotFinancially_Insert: InsertResponse<any>;\n  };\n  // delete: {};\n};\n\nexport type GoalsResponse = {\n  // get: {};\n  insert: {\n    // TODO add correct type\n    goalsNotFinancially_Insert: InsertResponse<NonFinancialGoal>;\n  };\n  // delete: {};\n};\n\nexport type FinesResponse = {\n  get: {\n    fine_Overview: GetResponse<FinesOverviewItem>;\n  };\n  insert: {\n    fine_Insert: InsertResponse<FinesOverviewItem>;\n  };\n  delete: {\n    fine_Delete: SimpleResponse;\n  };\n};\n\nexport type PaymentsResponse = {\n  get: {\n    finePayment_Overview: GetResponse<any>;\n  };\n  insert: {\n    finePayment_Insert: InsertResponse<any>;\n  };\n  delete: {\n    finePayment_Delete: SimpleResponse;\n  };\n};\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/graphQL/suppliers.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/micro-service-props.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":2,"column":18,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":2,"endColumn":21,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[54,57],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[54,57],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export interface MicroserviceProps {\n  [key: string]: any;\n}\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/nonFinance.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/queries.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/response.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/utils/createOptions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/utils/dateUtils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/utils/formSchemas.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/utils/getCurrentTab.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/utils/getMonthOptions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/utils/getRouteName.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/utils/getYearFromPath.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/utils/getYearOptions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/utils/roundCurrency.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/utils/useDebounce.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/utils/usePrependedDropdownOptions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/utils/useTitle.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/vite-env.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]}]