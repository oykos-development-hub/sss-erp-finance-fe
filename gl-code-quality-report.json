[{"filePath":"/builds/erp/finance-fe/setupProxy.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/budgeLimitModal/budgeLimitModal.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Controller' is defined but never used.","line":2,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":19},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useFieldArray' is defined but never used.","line":2,"column":30,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":43},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'handleSubmit' is assigned a value but never used.","line":17,"column":5,"nodeType":"Identifier","messageId":"unusedVar","endLine":17,"endColumn":17},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'isValid' is assigned a value but never used.","line":18,"column":25,"nodeType":"Identifier","messageId":"unusedVar","endLine":18,"endColumn":32},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'control' is assigned a value but never used.","line":19,"column":5,"nodeType":"Identifier","messageId":"unusedVar","endLine":19,"endColumn":12},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'item' is defined but never used.","line":31,"column":42,"nodeType":"Identifier","messageId":"unusedVar","endLine":31,"endColumn":46},{"ruleId":"react/jsx-key","severity":2,"message":"Missing \"key\" prop for element in iterator","line":44,"column":13,"nodeType":"JSXElement","messageId":"missingIterKey","endLine":50,"endColumn":15}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {Input, Modal} from 'client-library';\nimport {Controller, useForm, useFieldArray} from 'react-hook-form';\nimport useGetOrganizationUnits from '../../services/graphQL/organizationUnits/useGetOrganizationUnits.ts';\nimport {useEffect} from 'react';\n\ninterface BudgetOverviewModalProps {\n  onClose: () => void;\n  id?: number;\n}\n\ninterface BudgetLimitModalForm {\n  limits: number[];\n}\n\nconst budgeLimitModal = ({onClose}: BudgetOverviewModalProps) => {\n  const {\n    handleSubmit,\n    formState: {errors, isValid},\n    control,\n    register,\n    reset,\n  } = useForm<BudgetLimitModalForm>();\n  // const {insertBudget} = useInsertBudget();\n  // const {fields, append, remove} = useFieldArray({\n  //   control,\n  //   name: 'limits',\n  // });\n\n  const {organizationUnits} = useGetOrganizationUnits(undefined, {allOption: true});\n  useEffect(() => {\n    reset({limits: organizationUnits.map(item => 0)});\n  }, [organizationUnits]);\n  return (\n    <Modal\n      open={true}\n      onClose={onClose}\n      title=\"NOVI BUDŽET\"\n      leftButtonOnClick={onClose}\n      rightButtonText=\"Kreiraj novi budžet\"\n      leftButtonText=\"Otkaži\"\n      content={\n        <>\n          {organizationUnits.map(item => (\n            <Input\n              {...register(`limits.${item.id}`, {required: 'Ovo polje je obavezno'})}\n              label={item.title}\n              placeholder=\"Unesite limit...\"\n              error={errors.limits?.message as string}\n              type=\"number\"\n            />\n          ))}\n        </>\n      }\n    />\n  );\n};\n\nexport default budgeLimitModal;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/budgetList/budgetList.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":16,"column":21,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":16,"endColumn":24,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[985,988],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[985,988],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {useState} from 'react';\nimport {Button, Divider, SendIcon, TrashIcon, Table, Theme, Modal, Typography} from 'client-library';\nimport {Controls, FilterDropdown, Filters, Header, MainTitle, OverviewBox, ScreenWrapper} from './styles';\nimport {budgetOverviewTableHeads, budgetStatus, budgetType, budgetYear} from './constants';\nimport {BudgetOverviewFilters} from '../../screens/budget/budgetOverview/types';\nimport {BudgetOverviewItem} from '../../types/graphQL/budgetOverview';\nimport BudgetOverviewModal from '../budgetOverviewModal/budgetOverviewModal';\nimport {DeleteModal} from '../../shared/deleteModal/deleteModal';\nimport useDeleteBudget from '../../services/graphQL/deleteBudget/useDeleteBudget.ts';\nimport useAppContext from '../../context/useAppContext.ts';\nimport useSendBudget from '../../services/graphQL/sendBudget/useSendBudget.ts';\n\nexport interface BudgetListProps {\n  tableData: BudgetOverviewItem[];\n  filterValues: BudgetOverviewFilters;\n  onFilter: (value: any, name: string) => void;\n  refetch: () => void;\n  id?: number;\n}\n\nconst BudgetList = ({tableData, filterValues, onFilter, refetch}: BudgetListProps) => {\n  const [budgetOverviewModal, setBudgetOverviewModal] = useState(false);\n  const [showDeleteModalBudgetId, setShowDeleteModalBudgetId] = useState<number | undefined>(undefined);\n  const [showSendModalBudgetId, setShowSendModalBudgetId] = useState<number | undefined>(undefined);\n  const {deleteBudget} = useDeleteBudget();\n  const {sendBudget} = useSendBudget();\n  const {\n    navigation: {navigate},\n    alert,\n    breadcrumbs,\n  } = useAppContext();\n\n  const onDelete = (budget: BudgetOverviewItem) => {\n    setShowDeleteModalBudgetId(budget.id);\n  };\n\n  const onSend = (budget: BudgetOverviewItem) => {\n    // TODO handle rest of the logic and modal\n    // check if we also need confirmation modal for this\n    setShowSendModalBudgetId(budget.id);\n    handleSend();\n  };\n\n  const handleCloseSendModal = () => {\n    setShowSendModalBudgetId(undefined);\n  };\n\n  const handleCloseDeleteModal = () => {\n    setShowDeleteModalBudgetId(undefined);\n  };\n\n  const handleDelete = async () => {\n    if (!showDeleteModalBudgetId) return;\n\n    await deleteBudget(\n      showDeleteModalBudgetId,\n      () => {\n        alert.success('Uspješno ste obrisali budžet');\n        refetch();\n      },\n      () => {\n        alert.error('Došlo je do greške prilikom brisanja budžeta');\n      },\n    );\n    setShowDeleteModalBudgetId(undefined);\n  };\n\n  const handleSend = async () => {\n    if (!showSendModalBudgetId) return;\n\n    await sendBudget(\n      showSendModalBudgetId,\n      () => {\n        alert.success('Uspešno ste poslali budžet');\n      },\n      () => {\n        alert.error('Došlo je do greške prilikom slanja budžeta');\n      },\n    );\n    handleCloseSendModal();\n    refetch();\n  };\n\n  const handleRedirect = (budget: BudgetOverviewItem) => {\n    navigate(`/finance/budget/${budget.id}/summary`);\n    breadcrumbs.add({\n      name: 'Summary',\n      to: '/finance/budget/summary',\n    });\n    // navigate(`/finance/budget-create-${budget.year}`);\n  };\n\n  return (\n    <ScreenWrapper>\n      <OverviewBox>\n        <MainTitle variant=\"bodyMedium\" content=\"BUDGET OVERVIEW SCREEN\" />\n        <Divider color=\"#615959\" height=\"1px\" />\n        <Header>\n          <Filters>\n            <FilterDropdown\n              label=\"GODINA:\"\n              options={budgetYear}\n              value={filterValues.year}\n              name=\"year\"\n              onChange={value => onFilter(value, 'year')}\n              placeholder=\"Sve\"\n            />\n            <FilterDropdown\n              label=\"TIP BUDZETA:\"\n              options={budgetType}\n              value={filterValues.type_budget}\n              name=\"type\"\n              onChange={value => onFilter(value, 'type_budget')}\n              placeholder=\"Sve\"\n            />\n            <FilterDropdown\n              label=\"STATUS:\"\n              options={budgetStatus}\n              value={filterValues.status}\n              name=\"status\"\n              onChange={value => onFilter(value, 'status')}\n              placeholder=\"Sve\"\n            />\n          </Filters>\n          <Controls>\n            <Button\n              content=\"New Budget\"\n              variant=\"secondary\"\n              style={{width: 130}}\n              onClick={() => setBudgetOverviewModal(true)}\n            />\n          </Controls>\n        </Header>\n        <Table\n          tableHeads={budgetOverviewTableHeads}\n          data={tableData}\n          style={{marginBottom: 22}}\n          tableActions={[\n            {\n              name: 'delete',\n              onClick: onDelete,\n              icon: <TrashIcon stroke={Theme?.palette?.gray800} />,\n            },\n            {\n              name: 'send',\n              onClick: onSend,\n              icon: <SendIcon stroke={Theme?.palette?.gray800} />,\n            },\n          ]}\n          onRowClick={handleRedirect}\n        />\n        {budgetOverviewModal && <BudgetOverviewModal refetch={refetch} onClose={() => setBudgetOverviewModal(false)} />}\n\n        <DeleteModal\n          open={!!showDeleteModalBudgetId}\n          onClose={() => {\n            handleCloseDeleteModal();\n          }}\n          handleDelete={handleDelete}\n        />\n        <Modal\n          open={!!showSendModalBudgetId}\n          onClose={handleCloseSendModal}\n          width={450}\n          leftButtonText=\"Pošalji\"\n          rightButtonText=\"Otkaži\"\n          content={\n            <Typography\n              content=\"Da li ste sigurni da želite da pošaljete ovaj budžet?\"\n              variant=\"bodyLarge\"\n              style={{fontWeight: 600}}\n            />\n          }\n          leftButtonOnClick={() => handleSend()}\n          rightButtonOnClick={() => handleCloseSendModal()}\n        />\n      </OverviewBox>\n    </ScreenWrapper>\n  );\n};\n\nexport default BudgetList;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/budgetList/constants.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/budgetList/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/budgetOverviewModal/budgetOverviewModal.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useInsertBudget' is defined but never used.","line":6,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":23},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'MicroserviceProps' is defined but never used.","line":8,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":26},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'refetch' is defined but never used.","line":21,"column":40,"nodeType":"Identifier","messageId":"unusedVar","endLine":21,"endColumn":47}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {Dropdown, Modal} from 'client-library';\nimport {Controller, useForm} from 'react-hook-form';\nimport {DropdownData} from '../../types/dropdownData';\nimport {BudgetOverviewForm} from './styles';\nimport {budgetTypeModal, budgetYearModal} from '../budgetList/constants';\nimport useInsertBudget from '../../services/graphQL/insertBudget/useInsertBudget.ts';\nimport useAppContext from '../../context/useAppContext.ts';\nimport {MicroserviceProps} from '../../types/micro-service-props.ts';\n\ninterface BudgetOverviewModalProps {\n  onClose: () => void;\n  id?: number;\n  refetch?: () => void;\n}\n\ninterface BudgetOverviewModalForm {\n  year: DropdownData<string>;\n  budget_type: DropdownData<number>;\n}\n\nconst BudgetOverviewModal = ({onClose, refetch}: BudgetOverviewModalProps) => {\n  const {\n    handleSubmit,\n    formState: {errors, isValid},\n    control,\n  } = useForm<BudgetOverviewModalForm>();\n\n  const context = useAppContext();\n  // const {insertBudget} = useInsertBudget();\n\n  const onAddNewBudget = async (data: BudgetOverviewModalForm) => {\n    if (isValid) {\n      context.navigation.navigate(`/finance/budget-create-${data.year.id}`, {\n        state: {\n          data,\n        },\n      });\n    }\n  };\n\n  return (\n    <Modal\n      open={true}\n      onClose={onClose}\n      title=\"NOVI BUDŽET\"\n      leftButtonOnClick={onClose}\n      rightButtonOnClick={handleSubmit(onAddNewBudget)}\n      rightButtonText=\"Kreiraj novi budžet\"\n      leftButtonText=\"Otkaži\"\n      content={\n        <BudgetOverviewForm>\n          <Controller\n            name=\"year\"\n            rules={{required: 'Ovo polje je obavezno'}}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                options={budgetYearModal}\n                label=\"GODINA:\"\n                error={errors.year?.message as string}\n              />\n            )}\n          />\n\n          <Controller\n            name=\"budget_type\"\n            control={control}\n            rules={{required: 'Ovo polje je obavezno'}}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                options={budgetTypeModal}\n                label=\"TIP BUDŽETA:\"\n                error={errors.budget_type?.message as string}\n              />\n            )}\n          />\n        </BudgetOverviewForm>\n      }\n    />\n  );\n};\n\nexport default BudgetOverviewModal;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/budgetOverviewModal/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/budgetTabs/budgetTabs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/goalsModal/goalsModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/goalsModal/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/goalsModal/types.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":3,"column":23,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":3,"endColumn":26,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[74,77],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[74,77],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":3,"column":38,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":3,"endColumn":41,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[89,92],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[89,92],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export interface GoalsModalProps {\n  open: boolean;\n  onClose: (refetch?: any, message?: any) => void;\n  budgetProgramId: number;\n}\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/indicatorModal/indicatorModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/indicatorModal/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/indicatorModal/types.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":3,"column":23,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":3,"endColumn":26,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[78,81],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[78,81],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":3,"column":38,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":3,"endColumn":41,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[93,96],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[93,96],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export interface IndicatorModalProps {\n  open: boolean;\n  onClose: (refetch?: any, message?: any) => void;\n}\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/invoicesTabs/invoicesTabs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/nonFinanceAccordion/activitySection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/nonFinanceAccordion/nonFinanceAccordion.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/nonFinanceAccordion/programSection/programSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/nonFinanceAccordion/programSection/programSectionPreview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/nonFinanceAccordion/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/nonFinanceAccordion/subprogramSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/components/nonFinanceAccordion/types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/constants.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/context/appContext.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/context/useAppContext.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/index.tsx","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/ban-ts-comment","severity":2,"message":"Do not use \"@ts-ignore\" because it alters compilation errors.","line":12,"column":3,"nodeType":"Line","messageId":"tsDirectiveComment","endLine":12,"endColumn":16,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/ban-ts-comment","severity":2,"message":"Do not use \"@ts-ignore\" because it alters compilation errors.","line":18,"column":5,"nodeType":"Line","messageId":"tsDirectiveComment","endLine":18,"endColumn":18,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/ban-ts-comment","severity":2,"message":"Do not use \"@ts-ignore\" because it alters compilation errors.","line":22,"column":3,"nodeType":"Line","messageId":"tsDirectiveComment","endLine":22,"endColumn":16,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/ban-ts-comment","severity":2,"message":"Do not use \"@ts-ignore\" because it alters compilation errors.","line":25,"column":5,"nodeType":"Line","messageId":"tsDirectiveComment","endLine":25,"endColumn":18,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/router.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/404.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetCreate/budgetCreate.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'state' is assigned a value but never used.","line":15,"column":28,"nodeType":"Identifier","messageId":"unusedVar","endLine":15,"endColumn":33}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import useAppContext from '../../../context/useAppContext.ts';\nimport {getYearFromPath} from '../../../utils/getYearFromPath.ts';\nimport BudgetTable from '../../../shared/budgetTable/budgetTable.tsx';\nimport {BudgetTableStep} from '../../../shared/budgetTable/types.ts';\nimport {MainTitle, OverviewBox} from '../../../components/budgetList/styles.ts';\nimport {BoldText, Box, TableGrid, Controls} from './styles.tsx';\nimport ScreenWrapper from '../../../shared/screenWrapper/screenWrapper.tsx';\nimport {Typography, Button} from 'client-library';\nimport {useState} from 'react';\n\nconst BudgetCreate = () => {\n  const [limitModal, setLimitModal] = useState(false);\n  const {\n    navigation: {\n      location: {pathname, state},\n    },\n  } = useAppContext();\n\n  const year = getYearFromPath(pathname);\n  return (\n    <ScreenWrapper>\n      <OverviewBox>\n        <MainTitle variant=\"bodyMedium\" content={`Budžet ${year}`} />\n        <hr />\n        <Box>\n          <Controls>\n            <TableGrid>\n              <BoldText variant=\"bodySmall\" content=\"NAZIV PREDLAGAČA:\" />\n              <Typography variant=\"bodySmall\" content=\"SUDSKI SAVJET\" />\n            </TableGrid>\n            <Button content=\"New Budget\" variant=\"secondary\" style={{width: 130}} onClick={() => setLimitModal(true)} />\n          </Controls>\n        </Box>\n        <Box>\n          <TableGrid>\n            <BoldText variant=\"bodySmall\" content=\"PROGRAM:\" />\n            <Typography variant=\"bodySmall\" content=\"SUDSKI SAVJET\" />\n            <BoldText variant=\"bodySmall\" content=\"POTPROGRAM:\" />\n            <Typography variant=\"bodySmall\" content=\"SUDSKI SAVJET\" />\n            <BoldText variant=\"bodySmall\" content=\"AKTIVNOSTI:\" />\n            <Typography variant=\"bodySmall\" content=\"SUDSKI SAVJET\" />\n            <BoldText variant=\"bodySmall\" content=\"IZVOR:\" />\n            <Typography variant=\"bodySmall\" content=\"SUDSKI SAVJET\" />\n          </TableGrid>\n        </Box>\n        <BudgetTable step={BudgetTableStep.CREATING} year={year} organizationUnitId={1} />\n      </OverviewBox>\n      {limitModal && <></>}\n    </ScreenWrapper>\n  );\n};\n\nexport default BudgetCreate;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetCreate/styles.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetDetails/budgetDetails.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetDetails/budgetSummary.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetDetails/constants.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetDetails/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetFO/budgetFO.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetFO/budgetOverviewFO/budgetOverviewFO.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetFO/budgetRequestsFO/budgetRequestsFO.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetFO/budgetRequestsFO/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetFO/constants.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetNonFinancialOverview/budgetNonFinancialOverview.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":12,"column":25,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":12,"endColumn":28,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[449,452],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[449,452],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {NonFinanceAccordion} from '../../../components/nonFinanceAccordion/nonFinanceAccordion.tsx';\nimport {ButtonsContainer, StatusUpdateContainer, StyledDropdown} from './styles.ts';\nimport {budgetStatusModal} from '../../../components/budgetList/constants.tsx';\nimport {Button, Input} from 'client-library';\nimport {Controller, useForm} from 'react-hook-form';\n\nconst initialValues = {\n  status: null,\n  comment: '',\n};\n\nconst onSubmit = (data: any) => {\n  // TODO add sumbit api call\n  console.log(data);\n};\nconst BudgetNonFinancialOverview = () => {\n  const {control, register, handleSubmit} = useForm({defaultValues: initialValues});\n  return (\n    <div>\n      <NonFinanceAccordion programNo={1} key={`acc-${1}`} isPreview />\n      <StatusUpdateContainer>\n        {/*TODO check if options should be budgetStatusModal or something else*/}\n        <Controller\n          name=\"status\"\n          control={control}\n          render={({field: {name, value, onChange}}) => (\n            <StyledDropdown value={value} name={name} options={budgetStatusModal} onChange={onChange} />\n          )}\n        />\n        <Input {...register('comment')} textarea placeholder={'Dodaj komentar'} />\n      </StatusUpdateContainer>\n      <ButtonsContainer>\n        <Button content=\"Nazad\" variant=\"secondary\" />\n        <Button content=\"Izmijeni status\" variant=\"primary\" type={'submit'} onClick={handleSubmit(onSubmit)} />\n      </ButtonsContainer>\n    </div>\n  );\n};\n\nexport default BudgetNonFinancialOverview;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetNonFinancialOverview/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetOverview/budgetOverview.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":25,"column":28,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":25,"endColumn":31,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[943,946],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[943,946],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {Pagination} from 'client-library';\nimport {useState} from 'react';\nimport {PAGE_SIZE} from '../../../constants.ts';\nimport {BudgetOverviewFilters} from './types.ts';\nimport {initialBudgetFilterValues} from './constants.ts';\nimport useGetBudgets from '../../../services/graphQL/getBudgets/useGetBudgets.ts';\nimport BudgetList from '../../../components/budgetList/budgetList.tsx';\n\nconst BudgetOverview = () => {\n  const [page, setPage] = useState(1);\n  const [filterValues, setFilterValues] = useState<BudgetOverviewFilters>(initialBudgetFilterValues);\n\n  const {budgets, refetch} = useGetBudgets({\n    page,\n    size: PAGE_SIZE,\n    status: filterValues.status ? filterValues.status.id : '',\n    type_budget: filterValues.type_budget ? filterValues.type_budget.id : '',\n    year: filterValues.year ? filterValues.year.id : null,\n  });\n\n  const onPageChange = (page: number) => {\n    setPage(page + 1);\n  };\n\n  const onFilter = (value: any, name: string) => {\n    setFilterValues({...filterValues, [name]: name === 'search' ? value.target.value : value});\n  };\n\n  return (\n    <div>\n      <BudgetList refetch={refetch} tableData={budgets.items} onFilter={onFilter} filterValues={filterValues} />\n      <Pagination\n        pageCount={budgets.total ? Math.ceil(budgets.total / PAGE_SIZE) : 0}\n        onChange={onPageChange}\n        variant=\"filled\"\n        itemsPerPage={PAGE_SIZE}\n        previousLabel=\"Previous\"\n        nextLabel=\"Next\"\n        pageRangeDisplayed={3}\n        style={{marginTop: '20px'}}\n      />\n    </div>\n  );\n};\n\nexport default BudgetOverview;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetOverview/constants.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetOverview/types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetTemplate/budgetTemplate.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/budgetTemplate/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/nonFinance/nonFinance.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/nonFinance/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/nonFinancePreview/nonFinancePreview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/budget/nonFinancePreview/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/contracts/constants.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/contracts/contracts.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/contracts/contractsEntry/contractsEntry.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":28,"column":27,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":28,"endColumn":30,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[891,894],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[891,894],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {ContractsFormContainer, HalfWidthContainer, Row} from './styles.ts';\nimport Footer from '../../../../shared/footer.ts';\nimport {Dropdown, Datepicker, Input, Button} from 'client-library';\nimport {mockDropdownOptions} from '../../../../constants.ts';\nimport {Controller, useForm} from 'react-hook-form';\n\nconst initialValues = {\n  subject: null,\n  djelovodni_broj: null,\n  vrsta_ugovora: null,\n  sifarnik_poreske_uprave: null,\n  subjekt_koji_je_izdao_rjesenje: null,\n  aktivnost: null,\n  trajanje_ugovora: null,\n  datum_ugovora: null,\n  datum_valute: null,\n  datum_prijema_racunovodstva: null,\n  datum_prijema_racunovodstva_sss: null,\n  opis: '',\n  iznos_za_uplatu: null,\n  prethodna_primanja_u_mjesecu: null,\n  neto_iznos: null,\n};\n\nconst ContractsEntry = () => {\n  const {control, register, handleSubmit, reset} = useForm({defaultValues: initialValues});\n\n  const onSubmit = (data: any) => {\n    // TODO add sumbit api call\n    console.log(data);\n  };\n\n  return (\n    <ContractsFormContainer>\n      <>\n        <Row>\n          <Controller\n            name=\"subject\"\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"SUBJEKT:\"\n                placeholder={'Odaberite ime subjekta'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n          <Controller\n            name=\"djelovodni_broj\"\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"DJELOVODNI BROJ:\"\n                placeholder={'Odaberite djelovodni broj'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Controller\n            name={'vrsta_ugovora'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"VRSTA UGOVORA:\"\n                placeholder={'Odaberite vrstu ugovora'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n\n          <Controller\n            name={'sifarnik_poreske_uprave'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"ŠIFARNIK PORESKE UPRAVE:\"\n                placeholder={'Odaberite šifarnik'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Controller\n            name={'subjekt_koji_je_izdao_rjesenje'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label={'SUBJEKT KOJI JE IZDAO RJESENJE:'}\n                placeholder={'Odaberite subjekt'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Controller\n            name={'aktivnost'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"AKTIVNOST:\"\n                placeholder={'Odaberite aktivnost'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n          <Controller\n            name={'trajanje_ugovora'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"TRAJANJE UGOVORA:\"\n                placeholder={'Odaberite trajanje ugovora'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Controller\n            name={'datum_ugovora'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Datepicker\n                name={name}\n                selected={value ? new Date(value) : ''}\n                label=\"DATUM UGOVORA:\"\n                onChange={onChange}\n              />\n            )}\n          />\n          <Controller\n            name={'datum_valute'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Datepicker\n                name={name}\n                selected={value ? new Date(value) : ''}\n                label=\"DATUM VALUTE:\"\n                onChange={onChange}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Controller\n            name={'datum_prijema_racunovodstva'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Datepicker\n                name={name}\n                selected={value ? new Date(value) : ''}\n                label=\"DATUM PRIJEMA RAČUNOVODSTVA:\"\n                onChange={onChange}\n              />\n            )}\n          />\n          <Controller\n            name={'datum_prijema_racunovodstva_sss'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Datepicker\n                name={name}\n                selected={value ? new Date(value) : ''}\n                label=\"DATUM PRIJEMA RAČUNOVODSTVA SSS:\"\n                onChange={onChange}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Input {...register('opis')} label=\"OPIS:\" textarea placeholder=\"Unesite opis\" />\n        </Row>\n        <HalfWidthContainer>\n          <Row>\n            <Input\n              {...register('iznos_za_uplatu')}\n              label=\"IZNOS ZA UPLATU:\"\n              placeholder=\"Unesite iznos\"\n              type={'number'}\n              inputMode={'decimal'}\n              leftContent={<div>€</div>}\n            />\n            <Input\n              {...register('prethodna_primanja_u_mjesecu')}\n              label=\"PRETHODNA PRIMANJA U MJESECU:\"\n              placeholder=\"Unesite prethodna primanja\"\n              type={'number'}\n              inputMode={'decimal'}\n              leftContent={<div>€</div>}\n            />\n          </Row>\n          <HalfWidthContainer>\n            <Row>\n              <Input\n                {...register('neto_iznos')}\n                label={'NETO IZNOS:'}\n                placeholder={'Unesite neto iznos'}\n                type={'number'}\n                inputMode={'decimal'}\n                leftContent={<div>€</div>}\n              />\n            </Row>\n          </HalfWidthContainer>\n          <Button content=\"Obračunaj\" variant={'primary'} onClick={handleSubmit(onSubmit)} />\n        </HalfWidthContainer>\n        <Footer>\n          <Button content=\"Obriši\" variant=\"secondary\" onClick={() => reset()} />\n        </Footer>\n      </>\n    </ContractsFormContainer>\n  );\n};\n\nexport default ContractsEntry;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/contracts/contractsEntry/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/contracts/contractsOverview/contractsOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/contracts/contractsOverview/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/decisions/constants.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/decisions/decisions.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/decisions/decisionsEntry/decisionsEntry.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":28,"column":27,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":28,"endColumn":30,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[883,886],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[883,886],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {DecisionsFormContainer, HalfWidthContainer, Row} from './styles.ts';\nimport {Dropdown, Datepicker, Input, Button} from 'client-library';\nimport Footer from '../../../../shared/footer.ts';\nimport {Controller, useForm} from 'react-hook-form';\nimport {mockDropdownOptions} from '../../../../constants.ts';\n\nconst initialValues = {\n  subject: null,\n  broj_predmeta: null,\n  vrsta_rjesenja: null,\n  sifarnik_poreske_uprave: null,\n  subjekt_koji_je_izdao_rjesenje: null,\n  aktivnost: null,\n  izvor_finansiranja: null,\n  datum_rjesenja: null,\n  datum_valute: null,\n  datum_prijema_rjesenja: null,\n  datum_prijema_rjesenja_sss: null,\n  opis: '',\n  iznos_za_uplatu: null,\n  prethodna_primanja_u_mjesecu: null,\n  neto_iznos: null,\n};\n\nconst DecisionsEntry = () => {\n  const {control, register, handleSubmit, reset} = useForm({defaultValues: initialValues});\n\n  const onSubmit = (data: any) => {\n    // TODO add sumbit api call\n    console.log(data);\n  };\n\n  return (\n    <DecisionsFormContainer>\n      <>\n        <Row>\n          <Controller\n            name=\"subject\"\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"SUBJEKT:\"\n                placeholder={'Odaberite ime subjekta'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n          <Controller\n            name=\"broj_predmeta\"\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"BROJ PREDMETA:\"\n                placeholder={'Odaberite broj predmeta'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Controller\n            name={'vrsta_rjesenja'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"VRSTA RJEŠENJA:\"\n                placeholder={'Odaberite vrstu rešenja'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n          <Controller\n            name={'sifarnik_poreske_uprave'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"ŠIFARNIK PORESKE UPRAVE:\"\n                placeholder={'Odaberite šifarnik'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Controller\n            name={'subjekt_koji_je_izdao_rjesenje'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label={'SUBJEKT KOJI JE IZDAO RJEŠENJE:'}\n                placeholder={'Odaberite subjekt'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Controller\n            name={'aktivnost'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"AKTIVNOST:\"\n                placeholder={'Odaberite aktivnost'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n          <Controller\n            name={'izvor_finansiranja'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"IZVOR FINANSIRANJA:\"\n                placeholder={'Odaberite izvor finansiranja'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Controller\n            name={'datum_rjesenja'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Datepicker\n                name={name}\n                selected={value ? new Date(value) : ''}\n                label=\"DATUM RJEŠENJA:\"\n                onChange={onChange}\n              />\n            )}\n          />\n          <Controller\n            name={'datum_valute'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Datepicker\n                name={name}\n                selected={value ? new Date(value) : ''}\n                label=\"DATUM VALUTE:\"\n                onChange={onChange}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Controller\n            name={'datum_prijema_rjesenja'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Datepicker\n                name={name}\n                selected={value ? new Date(value) : ''}\n                label=\"DATUM PRIJEMA RJEŠENJA:\"\n                onChange={onChange}\n              />\n            )}\n          />\n          <Controller\n            name={'datum_prijema_rjesenja_sss'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Datepicker\n                name={name}\n                selected={value ? new Date(value) : ''}\n                label=\"DATUM PRIJEMA RJEŠENJA SSS:\"\n                onChange={onChange}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Input {...register('opis')} label=\"OPIS:\" textarea placeholder=\"Unesite opis\" />\n        </Row>\n        <HalfWidthContainer>\n          <Row>\n            <Input\n              {...register('iznos_za_uplatu')}\n              label=\"IZNOS ZA UPLATU:\"\n              placeholder=\"Unesite iznos\"\n              type={'number'}\n              inputMode={'decimal'}\n              leftContent={<div>€</div>}\n            />\n            <Input\n              {...register('prethodna_primanja_u_mjesecu')}\n              label=\"PRETHODNA PRIMANJA U MJESECU:\"\n              placeholder=\"Unesite prethodna primanja\"\n              type={'number'}\n              inputMode={'decimal'}\n              leftContent={<div>€</div>}\n            />\n          </Row>\n          <HalfWidthContainer>\n            <Row>\n              <Input\n                {...register('neto_iznos')}\n                label={'NETO IZNOS:'}\n                placeholder={'Unesite neto iznos'}\n                type={'number'}\n                inputMode={'decimal'}\n                leftContent={<div>€</div>}\n              />\n            </Row>\n          </HalfWidthContainer>\n          <Button content=\"Obračunaj\" variant={'primary'} onClick={handleSubmit(onSubmit)} />\n        </HalfWidthContainer>\n        <Footer>\n          <Button content=\"Obriši\" variant=\"secondary\" onClick={() => reset()} />\n        </Footer>\n      </>\n    </DecisionsFormContainer>\n  );\n};\n\nexport default DecisionsEntry;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/decisions/decisionsEntry/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/decisions/decisionsOverview/decisionsOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/decisions/decisionsOverview/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/invoices/constants.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/invoices/invoiceEntry/InvoiceEntry.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":24,"column":27,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":24,"endColumn":30,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[940,943],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[940,943],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {invoiceAmountTableHeads, invoiceEntryTableHeads} from '../constants';\nimport {Amount, InvoiceAmount, InvoiceEntryForm, Row} from './styles';\nimport {Dropdown, Datepicker, FileUpload, Typography, Input, Table, Button} from 'client-library';\nimport Footer from '../../../../shared/footer.ts';\nimport {FileUploadWrapper} from '../../../../shared/FileUploadWrapper.ts';\nimport {Controller, useForm} from 'react-hook-form';\nimport {invoiceTypeOptions, mockDropdownOptions} from '../../../../constants.ts';\n\nconst initialValues = {\n  dobavljac: null,\n  aktivnost: null,\n  broj_racuna: null,\n  datum_racuna: null,\n  datum_prijema_racuna_oj: null,\n  datum_prijema_racuna_sss: null,\n  ziro_racun: null,\n  datum_valute: null,\n  opis: '',\n  invoice_type: {id: 1, title: 'Ručni unos'},\n};\nconst InvoiceEntry = () => {\n  const {control, register, handleSubmit, reset, watch} = useForm({defaultValues: initialValues});\n\n  const onSubmit = (data: any) => {\n    // TODO add sumbit api call\n    console.log(data);\n  };\n\n  const invoiceType = watch('invoice_type').id;\n  return (\n    <InvoiceEntryForm>\n      <>\n        <Row>\n          <Controller\n            name=\"invoice_type\"\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"TIP RAČUNA:\"\n                placeholder={'Odaberite tip računa'}\n                options={invoiceTypeOptions}\n              />\n            )}\n          />\n          <Controller\n            name=\"dobavljac\"\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"DOBAVLJAČ:\"\n                placeholder={'Odaberite ime dobavljača'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Controller\n            name=\"dobavljac\"\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"NARUDŽBENICA:\"\n                placeholder={'Odaberite narudžbenicu'}\n                options={[]}\n                isDisabled={invoiceType === 1}\n              />\n            )}\n          />\n          <Controller\n            name={'datum_racuna'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Datepicker\n                name={name}\n                selected={value ? new Date(value) : ''}\n                label=\"DATUM RAČUNA:\"\n                onChange={onChange}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Controller\n            name={'datum_prijema_racuna_oj'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Datepicker\n                name={name}\n                selected={value ? new Date(value) : ''}\n                label=\"DATUM PRIJEMA RAČUNA OJ:\"\n                onChange={onChange}\n              />\n            )}\n          />\n          <Controller\n            name={'datum_prijema_racuna_sss'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Datepicker\n                name={name}\n                selected={value ? new Date(value) : ''}\n                label=\"DATUM PRIJEMA RAČUNA SSS:\"\n                onChange={onChange}\n              />\n            )}\n          />\n        </Row>\n        <FileUploadWrapper>\n          <FileUpload\n            icon={<></>}\n            variant=\"secondary\"\n            onUpload={() => console.log('upload')}\n            note={<Typography variant=\"bodySmall\" content=\"Prilog dokumenta\" />}\n            buttonText=\"Učitaj fajl\"\n          />\n        </FileUploadWrapper>\n        <Row>\n          <Controller\n            name={'ziro_racun'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"ŽIRO RAČUN:\"\n                placeholder={'Odaberite broj računa'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n          <Controller\n            name={'datum_valute'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Datepicker\n                name={name}\n                selected={value ? new Date(value) : ''}\n                label=\"DATUM VALUTE:\"\n                onChange={onChange}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Input {...register('opis')} label=\"OPIS:\" textarea placeholder=\"Unesite opis\" />\n        </Row>\n        <Table tableHeads={invoiceEntryTableHeads} data={[]} />\n        <Amount>\n          <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"NETO IZNOS:\" />\n          <Typography variant=\"bodySmall\" content=\"324e\" />\n        </Amount>\n        <Amount>\n          <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"PDV:\" />\n          <Typography variant=\"bodySmall\" content=\"4,5e\" />\n        </Amount>\n        <Amount>\n          <Typography style={{fontWeight: 600}} variant=\"bodySmall\" content=\"UKUPAN IZNOS:\" />\n          <Typography variant=\"bodySmall\" content=\"324e\" />\n        </Amount>\n        <InvoiceAmount>\n          <Typography variant=\"bodySmall\" content=\"INVOICE AMOUNT BY KONTO\" />\n        </InvoiceAmount>\n        <Table tableHeads={invoiceAmountTableHeads} data={[]} />\n      </>\n      <Footer>\n        <Button content=\"Odustani\" variant=\"secondary\" style={{width: 130}} onClick={() => reset()} />\n        <Button content=\"Sačuvaj\" variant=\"primary\" onClick={handleSubmit(onSubmit)} />\n      </Footer>\n    </InvoiceEntryForm>\n  );\n};\n\nexport default InvoiceEntry;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/invoices/invoiceEntry/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/invoices/invoices.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/invoices/invoicesOverview/invoicesOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/invoices/invoicesOverview/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/salaries/constants.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/salaries/salaries.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/salaries/salariesEntry/salariesEntry.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":17,"column":27,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":17,"endColumn":30,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[658,661],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[658,661],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {SalariesFormContainer, Row, FileUploadStepTitle} from './styles.ts';\nimport Footer from '../../../../shared/footer.ts';\nimport {Dropdown, Datepicker, Input, Button, FileUpload, Typography} from 'client-library';\nimport {FileUploadWrapper} from '../../../../shared/FileUploadWrapper.ts';\nimport {mockDropdownOptions} from '../../../../constants.ts';\nimport {Controller, useForm} from 'react-hook-form';\n\nconst initialValues = {\n  aktivnost: null,\n  mjesec: null,\n  datum_obracuna: null,\n  opis: '',\n};\nconst SalariesEntry = () => {\n  const {control, register, handleSubmit, reset} = useForm({defaultValues: initialValues});\n\n  const onSubmit = (data: any) => {\n    // TODO add sumbit api call\n    console.log(data);\n  };\n\n  return (\n    <SalariesFormContainer>\n      <>\n        <Row>\n          <Controller\n            name=\"aktivnost\"\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"AKTIVNOST\"\n                placeholder={'Odaberite aktivnost'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Controller\n            name={'mjesec'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Dropdown\n                name={name}\n                value={value}\n                onChange={onChange}\n                label=\"MJESEC:\"\n                placeholder={'Odaberite mjesec'}\n                options={mockDropdownOptions}\n              />\n            )}\n          />\n          <Controller\n            name={'datum_obracuna'}\n            control={control}\n            render={({field: {name, value, onChange}}) => (\n              <Datepicker\n                name={name}\n                selected={value ? new Date(value) : ''}\n                label=\"DATUM OBRAČUNA:\"\n                onChange={onChange}\n              />\n            )}\n          />\n        </Row>\n        <Row>\n          <Input {...register('opis')} label=\"OPIS:\" textarea placeholder=\"Unesite opis\" />\n        </Row>\n        <Row>\n          <FileUploadStepTitle variant=\"bodyMedium\" content=\"STEP 1: UVEZI REKAPITULACIJU MJESEČNE ZARADE\" />\n        </Row>\n        <FileUploadWrapper>\n          <FileUpload\n            icon={<></>}\n            variant=\"secondary\"\n            onUpload={e => console.log(e)}\n            note={<Typography variant=\"bodySmall\" content=\"UVEZI REKAPITULACIJU MJESEČNE ZARADE\" />}\n            buttonText=\"UČITAJ FAJL\"\n          />\n        </FileUploadWrapper>\n        <Row>\n          <FileUploadStepTitle variant=\"bodyMedium\" content=\"STEP 2: UVEZI REKAPITULACIJU REKAPITULACIJU ZARADA\" />\n        </Row>\n        <FileUploadWrapper>\n          <FileUpload\n            icon={<></>}\n            variant=\"secondary\"\n            onUpload={e => console.log(e)}\n            note={<Typography variant=\"bodySmall\" content=\"UVEZI REKAPITULACIJU OBUSTAVA ZARADA\" />}\n            buttonText=\"UČITAJ FAJL\"\n          />\n        </FileUploadWrapper>\n        <Footer>\n          <Button content=\"Obriši\" variant=\"secondary\" onClick={() => reset()} />\n          <Button content=\"Nastavi\" variant=\"primary\" onClick={handleSubmit(onSubmit)} />\n        </Footer>\n      </>\n    </SalariesFormContainer>\n  );\n};\n\nexport default SalariesEntry;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/salaries/salariesEntry/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/salaries/salariesOverview/salariesOverview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/screens/liabilitesAndReceivables/salaries/salariesOverview/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/constants.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/get-environment.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/getEnvironment.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/counts/getCountOverview.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/counts/useGetCountOverview.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/deleteBudget/deleteBudget.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/deleteBudget/useDeleteBudget.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/getBudgetDetails/getBudgetDetails.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/getBudgetDetails/useGetBudgetDetails.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/getBudgets/getBudgets.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/getBudgets/useGetBudgets.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/index.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":19,"column":38,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":19,"endColumn":41,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[795,798],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[795,798],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":19,"column":52,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":19,"endColumn":55,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[809,812],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[809,812],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {getEnvironment} from '../get-environment';\nimport getBudgets from './getBudgets/getBudgets';\nimport deleteBudget from './deleteBudget/deleteBudget';\nimport insertBudget from './insertBudget/insertBudget.ts';\nimport getCountOverview from './counts/getCountOverview.ts';\nimport getBudgetDetails from './getBudgetDetails/getBudgetDetails.ts';\nimport insertNonFinancial from './insertNonFinancial/insertNonFinancial.ts';\nimport goalsInsert from './insertNonFinancial/goals/insertGoals.ts';\nimport sendBudget from './sendBudget/sendBudget.ts';\n\nexport const BFF_URL = {\n  local: 'http://localhost:8080',\n  development: 'https://sss-erp-bff.oykos.me',\n  staging: 'http://localhost:8080',\n  production: 'http://localhost:8080',\n};\n\nexport const GraphQL = {\n  fetch: (query: string, variables?: any): Promise<any> => {\n    return fetch(BFF_URL[getEnvironment()], {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({query, variables}),\n    })\n      .then(response => response.json())\n      .catch(error => console.error(error));\n  },\n  getBudgets: getBudgets,\n  insertBudget: insertBudget,\n  deleteBudget: deleteBudget,\n  sendBudget: sendBudget,\n  getCountOverview: getCountOverview,\n  getBudgetDetails: getBudgetDetails,\n  insertNonFinancial: insertNonFinancial,\n  goalsInsert: goalsInsert,\n};\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/insertBudget/insertBudget.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/insertBudget/useInsertBudget.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/insertNonFinancial/goals/insertGoals.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/insertNonFinancial/goals/useInsertGoals.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":9,"column":36,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":9,"endColumn":39,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[290,293],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[290,293],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {useState} from 'react';\nimport useAppContext from '../../../../context/useAppContext.ts';\nimport {GraphQL} from '../../index.ts';\n\nconst useInsertGoals = () => {\n  const [loading, setLoading] = useState(false);\n  const {fetch} = useAppContext();\n\n  const insertGoals = async (data: any, onSuccess?: () => void, onError?: () => void) => {\n    setLoading(true);\n    const response = await fetch(GraphQL.goalsInsert, {data});\n    if (response.goalsNotFinancially_Insert.status === 'success') {\n      onSuccess && onSuccess();\n    } else {\n      onError && onError();\n    }\n  };\n\n  return {loading, insertGoals};\n};\n\nexport default useInsertGoals;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/insertNonFinancial/insertNonFinancial.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/insertNonFinancial/useInsertNonFinancial.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/organizationUnits/useGetOrganizationUnits.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/sendBudget/sendBudget.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/services/graphQL/sendBudget/useSendBudget.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/setupTests.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/FileUploadWrapper.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/budgetTable/budgetTable.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/budgetTable/components/budgetTableRow.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/budgetTable/components/budgetingForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/budgetTable/constants.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/budgetTable/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/budgetTable/types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/deleteModal/deleteModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/deleteModal/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/deleteModal/types.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":3,"column":22,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":3,"endColumn":25,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[74,77],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[74,77],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":4,"column":27,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":4,"endColumn":30,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[114,117],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[114,117],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":5,"column":19,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":5,"endColumn":22,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[146,149],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[146,149],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export interface DeleteModalProps {\n  open: boolean;\n  onClose: (action?: any) => void;\n  handleDelete: (action?: any) => void;\n  customContent?: any;\n}\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/footer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/screenWrapper/screenWrapper.tsx","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":23,"column":56,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":23,"endColumn":59,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[674,677],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[674,677],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {ReactElement, ReactNode} from 'react';\nimport useAppContext from '../../context/useAppContext.ts';\nimport {Container, StyledBreadcrumbs} from './styles.ts';\n\nconst ScreenWrapper = ({children}: {children: ReactNode}) => {\n  const {\n    breadcrumbs,\n    navigation: {navigate},\n  } = useAppContext();\n\n  const breadcrumbItems = breadcrumbs?.get();\n\n  const handleNavigation = (\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent> | undefined,\n    item?: {\n      name: string;\n      to: string;\n      icon?: ReactElement;\n    },\n  ) => {\n    e?.preventDefault();\n    const newBreacrumbs = [...breadcrumbItems];\n    const index = newBreacrumbs.findIndex((breadcrumb: any) => breadcrumb.name === item?.name);\n    newBreacrumbs.splice(index + 1, newBreacrumbs.length - index);\n    breadcrumbs.set(newBreacrumbs);\n    navigate(item?.to);\n  };\n\n  return (\n    <Container>\n      <StyledBreadcrumbs items={breadcrumbItems} onClick={handleNavigation} />\n      {children}\n    </Container>\n  );\n};\n\nexport default ScreenWrapper;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/screenWrapper/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/sectionBox.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/statusTableCell/statusTableCell.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/statusTableCell/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/styledTabsWithTitle/styledTabsWithTitle.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/shared/styledTabsWithTitle/styles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/dropdownData.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/environment.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/graphQL/budgetDetails.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/graphQL/budgetInsert.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/graphQL/budgetOverview.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/graphQL/counts.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/graphQL/nonFinancial.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/graphQL/organizationUnits.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":19,"column":14,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":19,"endColumn":17,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[357,360],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[357,360],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export interface GetResponse<T> {\n  status: string;\n  message: string;\n  total?: number;\n  items: T[];\n}\n\nexport interface OrganizationUnit {\n  id: number;\n  parent_id: number;\n  number_of_judges: number;\n  title: string;\n  abbreviation: string;\n  description?: string;\n  address?: string;\n  color: string;\n  folder_id: number;\n  icon: string;\n  children?: any;\n}\n\nexport type GetOrganizationUnitsParams = {\n  page?: number;\n  size?: number;\n  search?: string;\n};\n\nexport type GetOrganizationUnitsOptions = {\n  allOption?: boolean;\n};\n\nexport type OrganizationUnitsResponse = {\n  get: {\n    organizationUnits: GetResponse<OrganizationUnit>;\n  };\n};\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/graphQL/response.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":51,"column":50,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":51,"endColumn":53,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1039,1042],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1039,1042],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {BudgetOverviewItem} from './budgetOverview';\nimport {BudgetOverviewInsert} from './budgetInsert';\nimport {BudgetDetailsItem} from './budgetDetails';\nimport {NonFinancialGoal} from './nonFinancial.ts';\n\nexport interface GetResponse<T> {\n  status: string;\n  message: string;\n  total?: number;\n  items: T[];\n}\n\nexport interface InsertResponse<T> {\n  status: string;\n  message: string;\n  item: T[];\n}\n\nexport type SimpleResponse = {\n  status: string;\n  message: string;\n};\n\nexport type DetailsResponse = {\n  status: string;\n  message: string;\n};\n\nexport type BudgetResponse = {\n  get: {\n    budget_Overview: GetResponse<BudgetOverviewItem>;\n  };\n  insert: {\n    budget_Insert: InsertResponse<BudgetOverviewInsert>;\n  };\n  delete: {\n    budget_Delete: SimpleResponse;\n  };\n  send: {\n    budget_Send: SimpleResponse;\n  };\n  details: {\n    budget_Details: GetResponse<BudgetDetailsItem>;\n  };\n};\n\nexport type NonFinancialResponse = {\n  // get: {};\n  insert: {\n    // TODO add correct type\n    requestNotFinancially_Insert: InsertResponse<any>;\n  };\n  // delete: {};\n};\n\nexport type GoalsResponse = {\n  // get: {};\n  insert: {\n    // TODO add correct type\n    goalsNotFinancially_Insert: InsertResponse<NonFinancialGoal>;\n  };\n  // delete: {};\n};\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/micro-service-props.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":2,"column":18,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":2,"endColumn":21,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[54,57],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[54,57],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export interface MicroserviceProps {\n  [key: string]: any;\n}\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/types/nonFinance.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/utils/getCurrentTab.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/utils/getRouteName.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/utils/getYearFromPath.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/utils/useDebounce.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/utils/usePrependedDropdownOptions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/utils/useTitle.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]},{"filePath":"/builds/erp/finance-fe/src/vite-env.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]}]}]